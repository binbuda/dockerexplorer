export const tertiaryOptions = {
    "docker-app": [
        {
            value: 'docker-app-bundle',
            label: 'Create a CNAB invocation image and bundle.json for the application',
            usage: 'docker app bundle [APP_NAME] [--output OUTPUT_FILE]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--output , -o</code></td> <td><code>bundle.json</code></td> <td>Output file (- for stdout)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-completion',
            label: 'Generates completion scripts for the specified shell (bash or zsh)',
            usage: 'docker app completion SHELL',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information. Load the “docker app” completion code for bash into the current shell'
        },
        {
            value: 'docker-app-init',
            label: 'Initialize Docker Application definition',
            usage: 'docker app init APP_NAME [--compose-file COMPOSE_FILE] [--description DESCRIPTION] [--maintainer NAME:EMAIL ...] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. Start building a Docker Application package. If there is a docker-compose.yml file in the current directory it will be copied and used.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--compose-file</code></td> <td></td> <td>Compose file to use as application base (optional)</td> </tr> <tr> <td><code>--description</code></td> <td></td> <td>Human readable description of your application (optional)</td> </tr> <tr> <td><code>--maintainer</code></td> <td></td> <td>Name and email address of person responsible for the application (name:email) (optional)</td> </tr> <tr> <td><code>--single-file</code></td> <td></td> <td>Create a single-file Docker Application definition</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-inspect',
            label: 'Shows metadata, parameters and a summary of the Compose file for a given application',
            usage: 'docker app inspect [APP_NAME] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--insecure-registries</code></td> <td></td> <td>Use HTTP instead of HTTPS when pulling from/pushing to those registries</td> </tr> <tr> <td><code>--parameters-file</code></td> <td></td> <td>Override parameters file</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Pull the bundle</td> </tr> <tr> <td><code>--set , -s</code></td> <td></td> <td>Override parameter value</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-install',
            label: 'Install an application',
            usage: 'docker app install [APP_NAME] [--name INSTALLATION_NAME] [--target-context TARGET_CONTEXT] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. Install an application. By default, the application definition in the current directory will be installed.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--credential-set</code></td> <td></td> <td>Use a YAML file containing a credential set or a credential set present in the credential store</td> </tr> <tr> <td><code>--insecure-registries</code></td> <td></td> <td>Use HTTP instead of HTTPS when pulling from/pushing to those registries</td> </tr> <tr> <td><code>--kubernetes-namespace</code></td> <td></td> <td>Kubernetes namespace to install into</td> </tr> <tr> <td><code>--name</code></td> <td></td> <td>Installation name (defaults to application name)</td> </tr> <tr> <td><code>--orchestrator</code></td> <td></td> <td>Orchestrator to install on (swarm, kubernetes)</td> </tr> <tr> <td><code>--parameters-file</code></td> <td></td> <td>Override parameters file</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Pull the bundle</td> </tr> <tr> <td><code>--set , -s</code></td> <td></td> <td>Override parameter value</td> </tr> <tr> <td><code>--target-context</code></td> <td></td> <td>Context on which the application is installed (default: <current-context>)</current-context></td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td>Sends registry auth</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-list',
            label: 'List the installations and their last known installation result',
            usage: 'docker app list [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--target-context</code></td> <td></td> <td>List installations on this context</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-merge',
            label: 'Merge a directory format Docker Application definition into a single file',
            usage: 'docker app merge [APP_NAME] [--output OUTPUT_FILE]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--output , -o</code></td> <td></td> <td>Output file (default: in-place)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-pull',
            label: 'Pull an application package from a registry',
            usage: 'docker app pull NAME:TAG [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--insecure-registries</code></td> <td></td> <td>Use HTTP instead of HTTPS when pulling from/pushing to those registries</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-push',
            label: 'Push an application package to a registry',
            usage: 'docker app push [APP_NAME] --tag TARGET_REFERENCE [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--insecure-registries</code></td> <td></td> <td>Use HTTP instead of HTTPS when pulling from/pushing to those registries</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td>For multi-arch service images, only push the specified platforms</td> </tr> <tr> <td><code>--tag , -t</code></td> <td></td> <td>Target registry reference (default: <name>:<version> from metadata)</version></name></td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-render',
            label: 'Render the Compose file for an Application Package',
            usage: 'docker app render [APP_NAME] [--set KEY=VALUE ...] [--parameters-file PARAMETERS-FILE ...] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--formatter</code></td> <td><code>yaml</code></td> <td>Configure the output format (yaml|json)</td> </tr> <tr> <td><code>--insecure-registries</code></td> <td></td> <td>Use HTTP instead of HTTPS when pulling from/pushing to those registries</td> </tr> <tr> <td><code>--output , -o</code></td> <td><code>-</code></td> <td>Output file</td> </tr> <tr> <td><code>--parameters-file</code></td> <td></td> <td>Override parameters file</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Pull the bundle</td> </tr> <tr> <td><code>--set , -s</code></td> <td></td> <td>Override parameter value</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-split',
            label: 'Split a single-file Docker Application definition into the directory format',
            usage: 'docker app split [APP_NAME] [--output OUTPUT_DIRECTORY]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--output , -o</code></td> <td></td> <td>Output directory (default: in-place)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-status',
            label: 'Get the installation status of an application',
            usage: 'docker app status INSTALLATION_NAME [--target-context TARGET_CONTEXT] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--credential-set</code></td> <td></td> <td>Use a YAML file containing a credential set or a credential set present in the credential store</td> </tr> <tr> <td><code>--target-context</code></td> <td></td> <td>Context on which the application is installed (default: <current-context>)</current-context></td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td>Sends registry auth</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-uninstall',
            label: 'Uninstall an application',
            usage: 'docker app uninstall INSTALLATION_NAME [--target-context TARGET_CONTEXT] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--credential-set</code></td> <td></td> <td>Use a YAML file containing a credential set or a credential set present in the credential store</td> </tr> <tr> <td><code>--force</code></td> <td></td> <td>Force removal of installation</td> </tr> <tr> <td><code>--target-context</code></td> <td></td> <td>Context on which the application is installed (default: <current-context>)</current-context></td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td>Sends registry auth</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-upgrade',
            label: 'Upgrade an installed application',
            usage: 'docker app upgrade INSTALLATION_NAME [--target-context TARGET_CONTEXT] [OPTIONS]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--app-name</code></td> <td></td> <td>Override the installation with another Application Package</td> </tr> <tr> <td><code>--credential-set</code></td> <td></td> <td>Use a YAML file containing a credential set or a credential set present in the credential store</td> </tr> <tr> <td><code>--insecure-registries</code></td> <td></td> <td>Use HTTP instead of HTTPS when pulling from/pushing to those registries</td> </tr> <tr> <td><code>--parameters-file</code></td> <td></td> <td>Override parameters file</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Pull the bundle</td> </tr> <tr> <td><code>--set , -s</code></td> <td></td> <td>Override parameter value</td> </tr> <tr> <td><code>--target-context</code></td> <td></td> <td>Context on which the application is installed (default: <current-context>)</current-context></td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td>Sends registry auth</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-validate',
            label: 'Checks the rendered application is syntactically correct',
            usage: 'docker app validate [APP_NAME] [--set KEY=VALUE ...] [--parameters-file PARAMETERS_FILE]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--parameters-file</code></td> <td></td> <td>Override parameters file</td> </tr> <tr> <td><code>--set , -s</code></td> <td></td> <td>Override parameter value</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-app-version',
            label: 'Print version information',
            usage: 'docker app version',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        }
    ],
    "docker-assemble": [
        {
            value: 'docker-assemble-backend-cache-purge',
            label: 'Purge build cache',
            usage: 'docker assemble backend cache purge',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-assemble-backend-cache-usage',
            label: 'Show build cache contents',
            usage: 'docker assemble backend cache usage',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-assemble-backend-image',
            label: 'Print image to be used as backend',
            usage: 'docker assemble backend image',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-assemble-backend-info',
            label: 'Print information about build backend service',
            usage: 'docker assemble backend info',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-assemble-backend-logs',
            label: 'Show logs for build backend service',
            usage: 'docker assemble backend logs',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--follow</code></td> <td></td> <td>follow log output</td> </tr> <tr> <td><code>--addr</code></td> <td><code>docker-container://docker-assemble-backend-root</code></td> <td>backend address</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-assemble-backend-start',
            label: 'Start build backend service',
            usage: 'docker assemble backend start',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--allow-host-port</code></td> <td><code>[5000]</code></td> <td>allow the backend to access a host port by starting a proxy container</td> </tr> <tr> <td><code>--cache-volume</code></td> <td></td> <td>named volume to use as build cache (default “docker-assemble-backend-cache-root” if it exists, otherwise an anonymous volume)</td> </tr> <tr> <td><code>--host-port</code></td> <td></td> <td>host port to expose build service (0 is a random port)</td> </tr> <tr> <td><code>--image</code></td> <td><code>scratch</code></td> <td>image to use</td> </tr> <tr> <td><code>--addr</code></td> <td><code>docker-container://docker-assemble-backend-root</code></td> <td>backend address</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-assemble-backend-stop',
            label: 'Stop build backend service',
            usage: 'docker assemble backend stop',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--keep</code></td> <td></td> <td>stop but don’t destroy the container</td> </tr> <tr> <td><code>--addr</code></td> <td><code>docker-container://docker-assemble-backend-root</code></td> <td>backend address</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-assemble-backend-build',
            label: 'Build a project into a container',
            usage: 'docker assemble build [PATH]',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--debug-dump-config</code></td> <td></td> <td></td> </tr> <tr> <td><code>--debug-dump-image</code></td> <td></td> <td></td> </tr> <tr> <td><code>--debug-dump-llb</code></td> <td></td> <td></td> </tr> <tr> <td><code>--debug-skip-build</code></td> <td></td> <td></td> </tr> <tr> <td><code>--frontend</code></td> <td></td> <td></td> </tr> <tr> <td><code>--frontend-devel</code></td> <td></td> <td></td> </tr> <tr> <td><code>--label</code></td> <td></td> <td>label to write into the image as <code>KEY=VALUE</code></td> </tr> <tr> <td><code>--name</code></td> <td></td> <td>build image with repository <code>NAME</code> (default taken from project metadata)</td> </tr> <tr> <td><code>--namespace</code></td> <td></td> <td>build image within repository <code>NAMESPACE</code> (default no namespace)</td> </tr> <tr> <td><code>--option , -o</code></td> <td></td> <td>set an option as <code>OPTION=VALUE</code></td> </tr> <tr> <td><code>--port</code></td> <td></td> <td>port to expose from container</td> </tr> <tr> <td><code>--progress</code></td> <td><code>auto</code></td> <td>set type of progress (auto, plain, tty). Use plain to show container output</td> </tr> <tr> <td><code>--push</code></td> <td></td> <td>push result to registry, not local image store</td> </tr> <tr> <td><code>--push-insecure</code></td> <td></td> <td>push result to insecure (http) registry, not local image store</td> </tr> <tr> <td><code>--tag</code></td> <td></td> <td>tag image with <code>TAG</code> (default taken from project metadata or “latest”)</td> </tr> <tr> <td><code>--addr</code></td> <td><code>docker-container://docker-assemble-backend-root</code></td> <td>backend address</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-assemble-version',
            label: 'Print the version number of docker assemble',
            usage: 'docker assemble version',
            nb: '<span class="docker-enterprise-warn">This command is only available on Docker Enterprise Edition.</span> <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
    ],
    "docker-builder": [
        {
            value: 'docker-builder-build',
            label: 'Build an image from a Dockerfile',
            usage: 'docker builder build [OPTIONS] PATH | URL | -',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--add-host</code></td> <td></td> <td>Add a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code>--build-arg</code></td> <td></td> <td>Set build-time variables</td> </tr> <tr> <td><code>--cache-from</code></td> <td></td> <td>Images to consider as cache sources</td> </tr> <tr> <td><code>--cgroup-parent</code></td> <td></td> <td>Optional parent cgroup for the container</td> </tr> <tr> <td><code>--compress</code></td> <td></td> <td>Compress the build context using gzip</td> </tr> <tr> <td><code>--cpu-period</code></td> <td></td> <td>Limit the CPU CFS (Completely Fair Scheduler) period</td> </tr> <tr> <td><code>--cpu-quota</code></td> <td></td> <td>Limit the CPU CFS (Completely Fair Scheduler) quota</td> </tr> <tr> <td><code>--cpu-shares , -c</code></td> <td></td> <td>CPU shares (relative weight)</td> </tr> <tr> <td><code>--cpuset-cpus</code></td> <td></td> <td>CPUs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code>--cpuset-mems</code></td> <td></td> <td>MEMs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code>--disable-content-trust</code></td> <td><code>true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code>--file , -f</code></td> <td></td> <td>Name of the Dockerfile (Default is ‘PATH/Dockerfile’)</td> </tr> <tr> <td><code>--force-rm</code></td> <td></td> <td>Always remove intermediate containers</td> </tr> <tr> <td><code>--iidfile</code></td> <td></td> <td>Write the image ID to the file</td> </tr> <tr> <td><code>--isolation</code></td> <td></td> <td>Container isolation technology</td> </tr> <tr> <td><code>--label</code></td> <td></td> <td>Set metadata for an image</td> </tr> <tr> <td><code>--memory , -m</code></td> <td></td> <td>Memory limit</td> </tr> <tr> <td><code>--memory-swap</code></td> <td></td> <td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td> </tr> <tr> <td><code>--network</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set the networking mode for the RUN instructions during build</td> </tr> <tr> <td><code>--no-cache</code></td> <td></td> <td>Do not use cache when building the image</td> </tr> <tr> <td><code>--output , -o</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.31 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Output destination (format: type=local,dest=path)</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.31 API reference (in a new window)" data-original-title="" title="">API 1.32+</span></a><br>Set platform if server is multi-platform capable</td> </tr> <tr> <td><code>--progress</code></td> <td><code>auto</code></td> <td>Set type of progress output (auto, plain, tty). Use plain to show container output</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Always attempt to pull a newer version of the image</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress the build output and print image ID on success</td> </tr> <tr> <td><code>--rm</code></td> <td><code>true</code></td> <td>Remove intermediate containers after a successful build</td> </tr> <tr> <td><code>--secret</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.39/" target="_blank">API 1.39+</a><br>Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret</td> </tr> <tr> <td><code>--security-opt</code></td> <td></td> <td>Security options</td> </tr> <tr> <td><code>--shm-size</code></td> <td></td> <td>Size of /dev/shm</td> </tr> <tr> <td><code>--squash</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Squash newly built layers into a single new layer</td> </tr> <tr> <td><code>--ssh</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.39/" target="_blank">API 1.39+</a><br>SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])</key></key></socket></id></td> </tr> <tr> <td><code>--stream</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.31/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.31 API reference (in a new window)" data-original-title="" title="">API 1.31+</span></a><br>Stream attaches to server to negotiate build context</td> </tr> <tr> <td><code>--tag , -t</code></td> <td></td> <td>Name and optionally a tag in the ‘name:tag’ format</td> </tr> <tr> <td><code>--target</code></td> <td></td> <td>Set the target build stage to build.</td> </tr> <tr> <td><code>--ulimit</code></td> <td></td> <td>Ulimit options</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-builder-prune',
            label: 'Remove build cache',
            usage: 'docker app init APP_NAME [--compose-file COMPOSE_FILE] [--description DESCRIPTION] [--maintainer NAME:EMAIL ...] [OPTIONS]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--all , -a</code></td> <td></td> <td>Remove all unused images, not just dangling ones</td> </tr> <tr> <td><code>--filter</code></td> <td></td> <td>Provide filter values (e.g. ‘unused-for=24h’)</td> </tr> <tr> <td><code>--force , -f</code></td> <td></td> <td>Do not prompt for confirmation</td> </tr> <tr> <td><code>--keep-storage</code></td> <td></td> <td>Amount of disk space to keep for cache</td> </tr> </tbody></table>'
        }
    ],
    "docker-buildx": [
        {
            value: 'docker-buildx-bake',
            label: 'Build from a file',
            usage: 'docker buildx bake [OPTIONS] [TARGET...]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--file , -f</code></td> <td></td> <td>Build definition file</td> </tr> <tr> <td><code>--no-cache</code></td> <td></td> <td>Do not use cache when building the image</td> </tr> <tr> <td><code>--print</code></td> <td></td> <td>Print the options without building</td> </tr> <tr> <td><code>--progress</code></td> <td><code>auto</code></td> <td>Set type of progress output (auto, plain, tty). Use plain to show container output</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Always attempt to pull a newer version of the image</td> </tr> <tr> <td><code>--set</code></td> <td></td> <td>Override target value (eg: target.key=value)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-build',
            label: 'Start a build',
            usage: 'docker buildx build [OPTIONS] PATH | URL | -',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--add-host</code></td> <td></td> <td>Add a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code>--build-arg</code></td> <td></td> <td>Set build-time variables</td> </tr> <tr> <td><code>--cache-from</code></td> <td></td> <td>External cache sources (eg. user/app:cache, type=local,src=path/to/dir)</td> </tr> <tr> <td><code>--cache-to</code></td> <td></td> <td>Cache export destinations (eg. user/app:cache, type=local,dest=path/to/dir)</td> </tr> <tr> <td><code>--cgroup-parent</code></td> <td></td> <td>Optional parent cgroup for the container</td> </tr> <tr> <td><code>--compress</code></td> <td></td> <td>Compress the build context using gzip</td> </tr> <tr> <td><code>--cpu-period</code></td> <td></td> <td>Limit the CPU CFS (Completely Fair Scheduler) period</td> </tr> <tr> <td><code>--cpu-quota</code></td> <td></td> <td>Limit the CPU CFS (Completely Fair Scheduler) quota</td> </tr> <tr> <td><code>--cpu-shares , -c</code></td> <td></td> <td>CPU shares (relative weight)</td> </tr> <tr> <td><code>--cpuset-cpus</code></td> <td></td> <td>CPUs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code>--cpuset-mems</code></td> <td></td> <td>MEMs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code>--file , -f</code></td> <td></td> <td>Name of the Dockerfile (Default is ‘PATH/Dockerfile’)</td> </tr> <tr> <td><code>--force-rm</code></td> <td></td> <td>Always remove intermediate containers</td> </tr> <tr> <td><code>--iidfile</code></td> <td></td> <td>Write the image ID to the file</td> </tr> <tr> <td><code>--isolation</code></td> <td></td> <td>Container isolation technology</td> </tr> <tr> <td><code>--label</code></td> <td></td> <td>Set metadata for an image</td> </tr> <tr> <td><code>--load</code></td> <td></td> <td>Shorthand for --output=type=docker</td> </tr> <tr> <td><code>--memory , -m</code></td> <td></td> <td>Memory limit</td> </tr> <tr> <td><code>--memory-swap</code></td> <td></td> <td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td> </tr> <tr> <td><code>--network</code></td> <td></td> <td>Set the networking mode for the RUN instructions during build</td> </tr> <tr> <td><code>--no-cache</code></td> <td></td> <td>Do not use cache when building the image</td> </tr> <tr> <td><code>--output , -o</code></td> <td></td> <td>Output destination (format: type=local,dest=path)</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td>Set target platform for build</td> </tr> <tr> <td><code>--progress</code></td> <td><code>auto</code></td> <td>Set type of progress output (auto, plain, tty). Use plain to show container output</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Always attempt to pull a newer version of the image</td> </tr> <tr> <td><code>--push</code></td> <td></td> <td>Shorthand for --output=type=registry</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress the build output and print image ID on success</td> </tr> <tr> <td><code>--rm</code></td> <td><code>true</code></td> <td>Remove intermediate containers after a successful build</td> </tr> <tr> <td><code>--secret</code></td> <td></td> <td>Secret file to expose to the build: id=mysecret,src=/local/secret</td> </tr> <tr> <td><code>--security-opt</code></td> <td></td> <td>Security options</td> </tr> <tr> <td><code>--shm-size</code></td> <td></td> <td>Size of /dev/shm</td> </tr> <tr> <td><code>--squash</code></td> <td></td> <td>Squash newly built layers into a single new layer</td> </tr> <tr> <td><code>--ssh</code></td> <td></td> <td>SSH agent socket or keys to expose to the build (format: default|<id>[=<socket>|<key>[,<key>]])</key></key></socket></id></td> </tr> <tr> <td><code>--tag , -t</code></td> <td></td> <td>Name and optionally a tag in the ‘name:tag’ format</td> </tr> <tr> <td><code>--target</code></td> <td></td> <td>Set the target build stage to build.</td> </tr> <tr> <td><code>--ulimit</code></td> <td></td> <td>Ulimit options</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-create',
            label: 'Create a new builder instance',
            usage: 'docker buildx create [OPTIONS] [CONTEXT|ENDPOINT]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--append</code></td> <td></td> <td>Append a node to builder instead of changing it</td> </tr> <tr> <td><code>--driver</code></td> <td></td> <td>Driver to use (available: [])</td> </tr> <tr> <td><code>--leave</code></td> <td></td> <td>Remove a node from builder instead of changing it</td> </tr> <tr> <td><code>--name</code></td> <td></td> <td>Builder instance name</td> </tr> <tr> <td><code>--node</code></td> <td></td> <td>Create/modify node with given name</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td>Fixed platforms for current node</td> </tr> <tr> <td><code>--use</code></td> <td></td> <td>Set the current builder instance</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-imagetools-create',
            label: 'Create a new image based on source images',
            usage: 'docker buildx imagetools create [OPTIONS] [SOURCE] [SOURCE...]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--append</code></td> <td></td> <td>Append to existing manifest</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Show final image instead of pushing</td> </tr> <tr> <td><code>--file , -f</code></td> <td></td> <td>Read source descriptor from file</td> </tr> <tr> <td><code>--tag , -t</code></td> <td></td> <td>Set reference for new image</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-imagetools-inspect',
            label: 'Show details of image in the registry',
            usage: 'docker buildx imagetools inspect [OPTIONS] NAME',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--raw</code></td> <td></td> <td>Show original JSON manifest</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-inspect',
            label: 'Inspect current builder instance',
            usage: 'docker buildx inspect [NAME]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--bootstrap</code></td> <td></td> <td>Ensure builder has booted before inspecting</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-ls',
            label: 'List builder instances',
            usage: 'docker buildx ls',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-buildx-rm',
            label: 'Remove a builder instance',
            usage: 'docker buildx rm [NAME]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-buildx-stop',
            label: 'Stop builder instance',
            usage: 'docker buildx stop [NAME]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        },
        {
            value: 'docker-buildx-use',
            label: 'Set the current builder instance',
            usage: 'docker buildx use [OPTIONS] NAME',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--default</code></td> <td></td> <td>Set builder as default for current context</td> </tr> <tr> <td><code>--global</code></td> <td></td> <td>Builder persists context changes</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-buildx-version',
            label: 'Show buildx version information',
            usage: 'docker buildx version',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> It should not be used in production environments. To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        }
    ],
    "docker-checkpoint": [
        {
            value: 'docker-checkpoint',
            label: 'Manage checkpoints',
            usage: 'docker checkpoint COMMAND',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="docker-warn">This command is experimental.</span> <br><br> This command is experimental on the Docker daemon. It should not be used in production environments. To enable experimental features on the Docker daemon, edit the daemon.json and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">true</span>. <br><br> Experimental features provide early access to future product functionality. These features are intended for testing and feedback only as they may change between releases without warning or can be removed entirely from a future release. Experimental features must not be used in production environments. Docker does not offer support for experimental features. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> file and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. <br><br> To enable experimental features from the Docker Desktop menu, click Settings (Preferences on macOS) > Command Line and then turn on the Enable experimental features toggle. Click Apply & Restart.'
        },
        {
            value: 'docker-checkpoint-create',
            label: 'Create a checkpoint from a running container',
            usage: 'docker checkpoint create [OPTIONS] CONTAINER CHECKPOINT',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="docker-warn">This command is experimental.</span> <br><br> This command is experimental on the Docker daemon. It should not be used in production environments. To enable experimental features on the Docker daemon, edit the daemon.json and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">true</span>. <br><br> Experimental features provide early access to future product functionality. These features are intended for testing and feedback only as they may change between releases without warning or can be removed entirely from a future release. Experimental features must not be used in production environments. Docker does not offer support for experimental features. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> file and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. <br><br> To enable experimental features from the Docker Desktop menu, click Settings (Preferences on macOS) > Command Line and then turn on the Enable experimental features toggle. Click Apply & Restart.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--checkpoint-dir</code></td> <td></td> <td>Use a custom checkpoint storage directory</td> </tr> <tr> <td><code>--leave-running</code></td> <td></td> <td>Leave the container running after checkpoint</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-checkpoint-ls',
            label: 'List checkpoints for a container',
            usage: 'docker checkpoint ls [OPTIONS] CONTAINER',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="docker-warn">This command is experimental.</span> <br><br> This command is experimental on the Docker daemon. It should not be used in production environments. To enable experimental features on the Docker daemon, edit the daemon.json and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">true</span>. <br><br> Experimental features provide early access to future product functionality. These features are intended for testing and feedback only as they may change between releases without warning or can be removed entirely from a future release. Experimental features must not be used in production environments. Docker does not offer support for experimental features. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> file and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. <br><br> To enable experimental features from the Docker Desktop menu, click Settings (Preferences on macOS) > Command Line and then turn on the Enable experimental features toggle. Click Apply & Restart.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--checkpoint-dir</code></td> <td></td> <td>Use a custom checkpoint storage directory</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-checkpoint-rm',
            label: 'Remove a checkpoint    ',
            usage: 'docker checkpoint rm [OPTIONS] CONTAINER CHECKPOINT    ',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="docker-warn">This command is experimental.</span> <br><br> This command is experimental on the Docker daemon. It should not be used in production environments. To enable experimental features on the Docker daemon, edit the daemon.json and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">true</span>. <br><br> Experimental features provide early access to future product functionality. These features are intended for testing and feedback only as they may change between releases without warning or can be removed entirely from a future release. Experimental features must not be used in production environments. Docker does not offer support for experimental features. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> file and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. <br><br> To enable experimental features from the Docker Desktop menu, click Settings (Preferences on macOS) > Command Line and then turn on the Enable experimental features toggle. Click Apply & Restart.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--checkpoint-dir</code></td> <td></td> <td>Use a custom checkpoint storage directory</td> </tr> </tbody></table>'
        },
    ],
    "docker-cluster": [
        {
            value: 'docker-cluster-backup',
            label: 'Backup a running cluster',
            usage: 'docker cluster backup [OPTIONS] cluster',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code>--file</code></td> <td><code>backup.tar.gz</code></td> <td>Cluster backup filename</td> </tr> <tr> <td><code>--passphrase</code></td> <td></td> <td>Cluster backup passphrase</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-create',
            label: 'Create a new Docker Cluster',
            usage: 'docker cluster create [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code>--example</code></td> <td><code>aws</code></td> <td>Display an example cluster declaration</td> </tr> <tr> <td><code>--file , -f</code></td> <td><code>cluster.yml</code></td> <td>Cluster declaration</td> </tr> <tr> <td><code>--name , -n</code></td> <td></td> <td>Name for the cluster</td> </tr> <tr> <td><code>--switch-context , -s</code></td> <td></td> <td>Switch context after cluster create.</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-inspect',
            label: 'Display detailed information about a cluster',
            usage: 'docker cluster inspect [OPTIONS] cluster',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--all , -a</code></td> <td></td> <td>Display complete info about cluster</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-ls',
            label: 'List all available clusters',
            usage: 'docker cluster ls [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display numeric IDs</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-restore',
            label: 'Restore a cluster from a backup',
            usage: 'docker cluster restore [OPTIONS] cluster',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code>--file</code></td> <td><code>backup.tar.gz</code></td> <td>Cluster backup filename</td> </tr> <tr> <td><code>--passphrase</code></td> <td></td> <td>Cluster backup passphrase</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-rm',
            label: 'Remove a cluster',
            usage: 'docker cluster rm [OPTIONS] cluster',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code>--force , -f</code></td> <td></td> <td>Force removal of the cluster files</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-update',
            label: 'Update a running cluster’s desired state',
            usage: 'docker cluster update [OPTIONS] cluster',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code>--file , -f</code></td> <td></td> <td>Cluster definition</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-cluster-version',
            label: 'Print Version, Commit, and Build type',
            usage: 'docker cluster version',
            nb: 'This command is only available on Docker Enterprise Edition. <br> Learn more about Docker Enterprise products.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--json</code></td> <td></td> <td>Formats output as JSON. Implies ‘--log-level error’</td> </tr> <tr> <td><code>--dry-run</code></td> <td></td> <td>Skip provisioning resources</td> </tr> <tr> <td><code>--log-level</code></td> <td><code>warn</code></td> <td>Set the logging level (“trace”|”debug”|”info”|”warn”|”error”|”fatal”)</td> </tr> </tbody></table>'
        }
    ],
    "docker-context": [
        {
            value: 'docker-context-create',
            label: 'Create a context',
            usage: 'docker context create [OPTIONS] CONTEXT',
            nb: 'Creates a new context. This allows you to quickly switch the cli configuration to connect to different clusters or single nodes.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--default-stack-orchestrator</code></td> <td></td> <td>Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)</td> </tr> <tr> <td><code>--description</code></td> <td></td> <td>Description of the context</td> </tr> <tr> <td><code>--docker</code></td> <td></td> <td>set the docker endpoint</td> </tr> <tr> <td><code>--from</code></td> <td></td> <td>create context from a named context</td> </tr> <tr> <td><code>--kubernetes</code></td> <td></td> <td>set the kubernetes endpoint</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-context-export',
            label: 'Export a context to a tar or kubeconfig file',
            usage: 'docker context export [OPTIONS] CONTEXT [FILE|-]',
            nb: 'Exports a context in a file that can then be used with docker context import (or with kubectl if --kubeconfig is set). Default output filename is "CONTEXT" .dockercontext, or "CONTEXT" .kubeconfig if --kubeconfig is set. To export to STDOUT, you can run docker context export my-context -.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--kubeconfig</code></td> <td></td> <td>Export as a kubeconfig file</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-context-import',
            label: 'Import a context from a tar or zip file',
            usage: 'docker context import CONTEXT FILE|-',
            nb: 'Imports a context previously exported with docker context export. To import from stdin, use a hyphen (-) as filename.'
        },
        {
            value: 'docker-context-inspect',
            label: 'Display detailed information on one or more contexts',
            usage: 'docker context inspect [OPTIONS] [CONTEXT] [CONTEXT...]',
            nb: 'Inspects one or more contexts.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-context-ls',
            label: 'List contexts',
            usage: 'docker context ls [OPTIONS]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print contexts using a Go template</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only show context names</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-context-rm',
            label: 'Remove one or more contexts',
            usage: 'docker context rm CONTEXT [CONTEXT...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--force , -f</code></td> <td></td> <td>Force the removal of a context in use</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-context-update',
            label: 'Update a context',
            usage: 'docker context update [OPTIONS] CONTEXT',
            nb: 'Updates an existing context. See <a href="https://docs.docker.com/engine/reference/commandline/context_create/">context create</a>  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--default-stack-orchestrator</code></td> <td></td> <td>Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)</td> </tr> <tr> <td><code>--description</code></td> <td></td> <td>Description of the context</td> </tr> <tr> <td><code>--docker</code></td> <td></td> <td>set the docker endpoint</td> </tr> <tr> <td><code>--kubernetes</code></td> <td></td> <td>set the kubernetes endpoint</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-context-use',
            label: 'Set the current docker context',
            usage: 'docker context use CONTEXT',
            nb: 'Set the default context to use, when DOCKER_HOST, DOCKER_CONTEXT environment variables and --host, --context global options are not set. To disable usage of contexts, you can use the special default context.'
        },
    ],
    "docker-config": [
        {
            value: 'docker-config-create',
            label: 'Create a config from a file or STDIN',
            usage: 'docker config create [OPTIONS] CONFIG file|-',
            nb: 'API 1.30+  The client and daemon API must both be at least 1.30 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Swarm This command works with the Swarm orchestrator.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--label , -l</code></td> <td></td> <td>Config labels</td> </tr> <tr> <td><code>--template-driver</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.37/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.30 API reference (in a new window)" data-original-title="" title="">API 1.37+</span></a><br>Template driver</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-config-inspect',
            label: 'Display detailed information on one or more configs            ',
            usage: 'docker config inspect [OPTIONS] CONFIG [CONFIG...]',
            nb: 'API 1.30+  The client and daemon API must both be at least 1.30 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Swarm This command works with the Swarm orchestrator.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code>--pretty</code></td> <td></td> <td>Print the information in a human friendly format</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-config-ls',
            label: 'List configs',
            usage: 'docker config ls [OPTIONS]',
            nb: 'API 1.30+  The client and daemon API must both be at least 1.30 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Swarm This command works with the Swarm orchestrator.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print configs using a Go template</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-config-rm',
            label: 'Remove one or more configs',
            usage: 'docker config rm CONFIG [CONFIG...]',
            nb: 'API 1.30+  The client and daemon API must both be at least 1.30 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Swarm This command works with the Swarm orchestrator.'
        }
    ],
    "docker-manifest": [
        {
            value: 'docker-manifest-annotate',
            label: 'Add additional information to a local image manifest',
            usage: 'docker manifest annotate [OPTIONS] MANIFEST_LIST MANIFEST',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> <br><br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--arch</code></td> <td></td> <td>Set architecture</td> </tr> <tr> <td><code>--os</code></td> <td></td> <td>Set operating system</td> </tr> <tr> <td><code>--os-features</code></td> <td></td> <td>Set operating system feature</td> </tr> <tr> <td><code>--variant</code></td> <td></td> <td>Set architecture variant</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-manifest-create',
            label: 'Create a local manifest list for annotating and pushing to a registry',
            usage: 'docker manifest create MANIFEST_LIST MANIFEST [MANIFEST...]',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> <br><br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--amend , -a</code></td> <td></td> <td>Amend an existing manifest list</td> </tr> <tr> <td><code>--insecure</code></td> <td></td> <td>Allow communication with an insecure registry</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-manifest-inspect',
            label: 'Display an image manifest, or manifest list',
            usage: 'docker manifest inspect [OPTIONS] [MANIFEST_LIST] MANIFEST',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> <br><br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--insecure</code></td> <td></td> <td>Allow communication with an insecure registry</td> </tr> <tr> <td><code>--verbose , -v</code></td> <td></td> <td>Output additional info including layers and platform</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-manifest-push',
            label: 'Push a manifest list to a repository',
            usage: 'docker manifest push [OPTIONS] MANIFEST_LIST',
            nb: '<span class="docker-warn">This command is experimental on the Docker client.</span> <br><br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--insecure</code></td> <td></td> <td>Allow push to an insecure registry</td> </tr> <tr> <td><code>--purge , -p</code></td> <td></td> <td>Remove the local manifest list after push</td> </tr> </tbody></table>'
        }
    ],
    "docker-network": [
        {
            value: 'docker-network-connect',
            label: 'Connect a container to a network',
            usage: 'docker network connect [OPTIONS] NETWORK CONTAINER',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--alias</code></td> <td></td> <td>Add network-scoped alias for the container</td> </tr> <tr> <td><code>--driver-opt</code></td> <td></td> <td>driver options for the network</td> </tr> <tr> <td><code>--ip</code></td> <td></td> <td>IPv4 address (e.g., 172.30.100.104)</td> </tr> <tr> <td><code>--ip6</code></td> <td></td> <td>IPv6 address (e.g., 2001:db8::33)</td> </tr> <tr> <td><code>--link</code></td> <td></td> <td>Add link to another container</td> </tr> <tr> <td><code>--link-local-ip</code></td> <td></td> <td>Add a link-local address for the container</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-network-create',
            label: 'Create a network',
            usage: 'docker network create [OPTIONS] NETWORK',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Creates a new network. The DRIVER accepts bridge or overlay which are the built-in network drivers. If you have installed a third party or your own custom network driver you can specify that DRIVER here also. If you don’t specify the --driver option, the command automatically creates a bridge network for you. When you install Docker Engine it creates a bridge network automatically. This network corresponds to the docker0 bridge that Engine has traditionally relied on. When you launch a new container with docker run it automatically connects to this bridge network. You cannot remove this default bridge network, but you can create new ones using the network create command.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--attachable</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.21 API reference (in a new window)" data-original-title="" title="">API 1.25+</span></a><br>Enable manual container attachment</td> </tr> <tr> <td><code>--aux-address</code></td> <td></td> <td>Auxiliary IPv4 or IPv6 addresses used by Network driver</td> </tr> <tr> <td><code>--config-from</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.21 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>The network from which copying the configuration</td> </tr> <tr> <td><code>--config-only</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.21 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Create a configuration only network</td> </tr> <tr> <td><code>--driver , -d</code></td> <td><code>bridge</code></td> <td>Driver to manage the Network</td> </tr> <tr> <td><code>--gateway</code></td> <td></td> <td>IPv4 or IPv6 Gateway for the master subnet</td> </tr> <tr> <td><code>--ingress</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.21 API reference (in a new window)" data-original-title="" title="">API 1.29+</span></a><br>Create swarm routing-mesh network</td> </tr> <tr> <td><code>--internal</code></td> <td></td> <td>Restrict external access to the network</td> </tr> <tr> <td><code>--ip-range</code></td> <td></td> <td>Allocate container ip from a sub-range</td> </tr> <tr> <td><code>--ipam-driver</code></td> <td></td> <td>IP Address Management Driver</td> </tr> <tr> <td><code>--ipam-opt</code></td> <td></td> <td>Set IPAM driver specific options</td> </tr> <tr> <td><code>--ipv6</code></td> <td></td> <td>Enable IPv6 networking</td> </tr> <tr> <td><code>--label</code></td> <td></td> <td>Set metadata on a network</td> </tr> <tr> <td><code>--opt , -o</code></td> <td></td> <td>Set driver specific options</td> </tr> <tr> <td><code>--scope</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.21 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Control the network’s scope</td> </tr> <tr> <td><code>--subnet</code></td> <td></td> <td>Subnet in CIDR format that represents a network segment</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-network-disconnect',
            label: 'Disconnect a container from a network',
            usage: 'docker network disconnect [OPTIONS] NETWORK CONTAINER',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Returns information about one or more networks. By default, this command renders all results in a JSON object.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--force , -f</code></td> <td></td> <td>Force the container to disconnect from a network</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-network-inspect',
            label: 'Display detailed information on one or more networks',
            usage: 'docker network inspect [OPTIONS] NETWORK [NETWORK...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Disconnects a container from a network. The container must be running to disconnect it from the network.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code>--verbose , -v</code></td> <td></td> <td>Verbose output for diagnostics</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-network-ls',
            label: 'Disconnect a container from a network',
            usage: 'docker network disconnect [OPTIONS] NETWORK CONTAINER',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Lists all the networks the Engine daemon knows about. This includes the networks that span across multiple hosts in a cluster.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Provide filter values (e.g. ‘driver=bridge’)</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print networks using a Go template</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Do not truncate the output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display network IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-network-prune',
            label: 'Remove all unused networks',
            usage: 'docker network prune [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Remove all unused networks. Unused networks are those which are not referenced by any containers.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter</code></td> <td></td> <td>Provide filter values (e.g. "until=<timestamp>")</timestamp></td> </tr> <tr> <td><code>--force , -f</code></td> <td></td> <td>Do not prompt for confirmation</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-network-rm',
            label: 'Remove one or more networks',
            usage: 'docker network rm NETWORK [NETWORK...]',
            nb: 'Removes one or more networks by name or identifier. To remove a network, you must first disconnect any containers connected to it.'
        }
    ],
    "docker-image": [
        {
            value: 'docker-image-build',
            label: 'Build an image from a Dockerfile',
            usage: 'docker image build [OPTIONS] PATH | URL | -',
            nb: '  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--add-host</code></td> <td></td> <td>Add a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code>--build-arg</code></td> <td></td> <td>Set build-time variables</td> </tr> <tr> <td><code>--cache-from</code></td> <td></td> <td>Images to consider as cache sources</td> </tr> <tr> <td><code>--cgroup-parent</code></td> <td></td> <td>Optional parent cgroup for the container</td> </tr> <tr> <td><code>--compress</code></td> <td></td> <td>Compress the build context using gzip</td> </tr> <tr> <td><code>--cpu-period</code></td> <td></td> <td>Limit the CPU CFS (Completely Fair Scheduler) period</td> </tr> <tr> <td><code>--cpu-quota</code></td> <td></td> <td>Limit the CPU CFS (Completely Fair Scheduler) quota</td> </tr> <tr> <td><code>--cpu-shares , -c</code></td> <td></td> <td>CPU shares (relative weight)</td> </tr> <tr> <td><code>--cpuset-cpus</code></td> <td></td> <td>CPUs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code>--cpuset-mems</code></td> <td></td> <td>MEMs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code>--disable-content-trust</code></td> <td><code>true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code>--file , -f</code></td> <td></td> <td>Name of the Dockerfile (Default is ‘PATH/Dockerfile’)</td> </tr> <tr> <td><code>--force-rm</code></td> <td></td> <td>Always remove intermediate containers</td> </tr> <tr> <td><code>--iidfile</code></td> <td></td> <td>Write the image ID to the file</td> </tr> <tr> <td><code>--isolation</code></td> <td></td> <td>Container isolation technology</td> </tr> <tr> <td><code>--label</code></td> <td></td> <td>Set metadata for an image</td> </tr> <tr> <td><code>--memory , -m</code></td> <td></td> <td>Memory limit</td> </tr> <tr> <td><code>--memory-swap</code></td> <td></td> <td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td> </tr> <tr> <td><code>--network</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set the networking mode for the RUN instructions during build</td> </tr> <tr> <td><code>--no-cache</code></td> <td></td> <td>Do not use cache when building the image</td> </tr> <tr> <td><code>--output , -o</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span>API 1.40+</span></a><br>Output destination (format: type=local,dest=path)</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank"><span>API 1.32+</span></a><br>Set platform if server is multi-platform capable</td> </tr> <tr> <td><code>--progress</code></td> <td><code>auto</code></td> <td>Set type of progress output (auto, plain, tty). Use plain to show container output</td> </tr> <tr> <td><code>--pull</code></td> <td></td> <td>Always attempt to pull a newer version of the image</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress the build output and print image ID on success</td> </tr> <tr> <td><code>--rm</code></td> <td><code>true</code></td> <td>Remove intermediate containers after a successful build</td> </tr> <tr> <td><code>--secret</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.39/" target="_blank"><span>API 1.39+</span></a><br>Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret</td> </tr> <tr> <td><code>--security-opt</code></td> <td></td> <td>Security options</td> </tr> <tr> <td><code>--shm-size</code></td> <td></td> <td>Size of /dev/shm</td> </tr> <tr> <td><code>--squash</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Squash newly built layers into a single new layer</td> </tr> <tr> <td><code>--ssh</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.39/" target="_blank"><span>API 1.39+</span></a><br>SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])</key></key></socket></id></td> </tr> <tr> <td><code>--stream</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.31/" target="_blank"><span>API 1.31+</span></a><br>Stream attaches to server to negotiate build context</td> </tr> <tr> <td><code>--tag , -t</code></td> <td></td> <td>Name and optionally a tag in the ‘name:tag’ format</td> </tr> <tr> <td><code>--target</code></td> <td></td> <td>Set the target build stage to build.</td> </tr> <tr> <td><code>--ulimit</code></td> <td></td> <td>Ulimit options</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-history',
            label: 'Show the history of an image',
            usage: 'docker image history [OPTIONS] IMAGE',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print images using a Go template</td> </tr> <tr> <td><code>--human , -H</code></td> <td><code>true</code></td> <td>Print sizes and dates in human readable format</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only show numeric IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-import',
            label: 'Import the contents from a tarball to create a filesystem image',
            usage: 'docker image import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--change , -c</code></td> <td></td> <td>Apply Dockerfile instruction to the created image</td> </tr> <tr> <td><code>--message , -m</code></td> <td></td> <td>Set commit message for imported image</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank"><span>API 1.32+</span></a><br>Set platform if server is multi-platform capable</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-inspect',
            label: 'Display detailed information on one or more images',
            usage: 'docker image inspect [OPTIONS] IMAGE [IMAGE...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-load',
            label: 'Load an image from a tar archive or STDIN',
            usage: 'docker image load [OPTIONS]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--input , -i</code></td> <td></td> <td>Read from tar archive file, instead of STDIN</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress the load output</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-ls',
            label: 'List images',
            usage: 'docker image ls [OPTIONS] [REPOSITORY[:TAG]]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--all , -a</code></td> <td></td> <td>Show all images (default hides intermediate images)</td> </tr> <tr> <td><code>--digests</code></td> <td></td> <td>Show digests</td> </tr> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print images using a Go template</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only show numeric IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-prune',
            label: 'Remove unused images',
            usage: 'docker image pull [OPTIONS] NAME[:TAG|@DIGEST]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--all , -a</code></td> <td></td> <td>Remove all unused images, not just dangling ones</td> </tr> <tr> <td><code>--filter</code></td> <td></td> <td>Provide filter values (e.g. "until=<timestamp>")</timestamp></td> </tr> <tr> <td><code>--force , -f</code></td> <td></td> <td>Do not prompt for confirmation</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-pull',
            label: 'Pull an image or a repository from a registry',
            usage: 'docker image inspect [OPTIONS] IMAGE [IMAGE...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--all-tags , -a</code></td> <td></td> <td>Download all tagged images in the repository</td> </tr> <tr> <td><code>--disable-content-trust</code></td> <td><code>true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code>--platform</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank"><span>API 1.32+</span></a><br>Set platform if server is multi-platform capable</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress verbose output</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-push',
            label: 'Push an image or a repository to a registry',
            usage: 'docker image push [OPTIONS] NAME[:TAG]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--disable-content-trust</code></td> <td><code>true</code></td> <td>Skip image signing</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-rm',
            label: 'Remove one or more images',
            usage: 'docker image rm [OPTIONS] IMAGE [IMAGE...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--force , -f</code></td> <td></td> <td>Force removal of the image</td> </tr> <tr> <td><code>--no-prune</code></td> <td></td> <td>Do not delete untagged parents</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-save',
            label: 'Save one or more images to a tar archive (streamed to STDOUT by default)',
            usage: 'docker image save [OPTIONS] IMAGE [IMAGE...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--output , -o</code></td> <td></td> <td>Write to a file, instead of STDOUT</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-image-tag',
            label: 'Create a tag TARGET_IMAGE that refers to SOURCE_IMAG',
            usage: 'docker image tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]',
            nb: ''
        },
    ],
    "docker-registry": [
        {
            value: 'docker-registry-events',
            label: 'List registry events (DTR Only)',
            usage: 'docker registry events HOST | REPOSITORY [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information. <br><br> List registry events (Only supported by Docker Trusted Registry)  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print output using a Go template</td> </tr> <tr> <td><code>--limit</code></td> <td><code>50</code></td> <td>Specify the number of event results</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> <tr> <td><code>--object-type</code></td> <td></td> <td>Specify the type of Event target object [REPOSITORY | TAG | BLOB | MANIFEST | WEBHOOK | URI | PROMOTION | PUSH_MIRRORING | POLL_MIRRORING]</td> </tr> <tr> <td><code>--type</code></td> <td></td> <td>Specify the type of Event [CREATE | GET | DELETE | UPDATE | SEND | FAIL]</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-registry-history',
            label: 'Inspect registry image history (DTR Only)',
            usage: 'docker registry history IMAGE [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information. <br><br> Display information about a registry (Only supported by Docker Trusted Registry and must be authenticated as an admin user) <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print history using a Go template</td> </tr> <tr> <td><code>--human , -H</code></td> <td><code>true</code></td> <td>Print sizes and dates in human readable format</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-registry-info',
            label: 'Display information about a registry (DTR Only)',
            usage: '',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print output using a Go template</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-registry-inspect',
            label: 'Inspect registry image',
            usage: 'docker registry inspect IMAGE [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print output using a Go template</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-registry-joblogs',
            label: 'List registry job logs (DTR Only)',
            usage: 'docker registry joblogs HOST JOB_ID [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print output using a Go template</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-registry-ls',
            label: 'List registry images',
            usage: 'docker registry ls REPOSITORY[:TAG] [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--digests</code></td> <td></td> <td>Show digests</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print output using a Go template</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display image names</td> </tr> <tr> <td><code>--verbose</code></td> <td></td> <td>Display verbose image information</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-registry-rmi',
            label: 'Remove a registry image (DTR Only)',
            usage: 'docker registry rmi REPOSITORY:TAG [OPTIONS]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> <span class="docker-warn">This command is experimental on the Docker client.</span> <br> It should not be used in production environments. <br><br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files" target="_blank">config.json</a> and set <span class="tag-highlight">experimental</span> to <span class="tag-highlight">enabled</span>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features" target="_blank">here</a> for more information.'
        }
    ],
    "docker-secret": [
        {
            value: 'docker-secret-create',
            label: 'Create a secret from a file or STDIN as content',
            usage: 'docker secret create [OPTIONS] SECRET [file|-]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Creates a secret using standard input or from a file for the secret content. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--driver , -d</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.31/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.25 API reference (in a new window)" data-original-title="" title="">API 1.31+</span></a><br>Secret driver</td> </tr> <tr> <td><code>--label , -l</code></td> <td></td> <td>Secret labels</td> </tr> <tr> <td><code>--template-driver</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.37/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.25 API reference (in a new window)" data-original-title="" title="">API 1.37+</span></a><br>Template driver</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-secret-inspect',
            label: 'Display detailed information on one or more secrets',
            usage: 'docker secret inspect [OPTIONS] SECRET [SECRET...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Inspects the specified secret. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code>--pretty</code></td> <td></td> <td>Print the information in a human friendly format</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-secret-ls',
            label: 'List secrets',
            usage: 'docker secret ls [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Run this command on a manager node to list the secrets in the swarm. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print secrets using a Go template</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-secret-rm',
            label: 'Remove one or more secrets',
            usage: 'docker secret rm SECRET [SECRET...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Removes the specified secrets from the swarm.'
        }
    ],
    "docker-service": [
        {
            value: 'docker-service-create',
            label: 'Create a new service',
            usage: 'docker service create [OPTIONS] IMAGE [COMMAND] [ARG...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--config</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Specify configurations to expose to the service</td> </tr> <tr> <td><code>--constraint</code></td> <td></td> <td>Placement constraints</td> </tr> <tr> <td><code>--container-label</code></td> <td></td> <td>Container labels</td> </tr> <tr> <td><code>--credential-spec</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Credential spec for managed service account (Windows only)</td> </tr> <tr> <td><code>--detach , -d</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Exit immediately instead of waiting for the service to converge</td> </tr> <tr> <td><code>--dns</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set custom DNS servers</td> </tr> <tr> <td><code>--dns-option</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set DNS options</td> </tr> <tr> <td><code>--dns-search</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set custom DNS search domains</td> </tr> <tr> <td><code>--endpoint-mode</code></td> <td><code>vip</code></td> <td>Endpoint mode (vip or dnsrr)</td> </tr> <tr> <td><code>--entrypoint</code></td> <td></td> <td>Overwrite the default ENTRYPOINT of the image</td> </tr> <tr> <td><code>--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code>--env-file</code></td> <td></td> <td>Read in a file of environment variables</td> </tr> <tr> <td><code>--generic-resource</code></td> <td></td> <td>User defined resources</td> </tr> <tr> <td><code>--group</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set one or more supplementary user groups for the container</td> </tr> <tr> <td><code>--health-cmd</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Command to run to check health</td> </tr> <tr> <td><code>--health-interval</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Time between running the check (ms|s|m|h)</td> </tr> <tr> <td><code>--health-retries</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Consecutive failures needed to report unhealthy</td> </tr> <tr> <td><code>--health-start-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)</td> </tr> <tr> <td><code>--health-timeout</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Maximum time to allow one check to run (ms|s|m|h)</td> </tr> <tr> <td><code>--host</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Set one or more custom host-to-IP mappings (host:ip)</td> </tr> <tr> <td><code>--hostname</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Container hostname</td> </tr> <tr> <td><code>--init</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.37/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.37+</span></a><br>Use an init inside each service container to forward signals and reap processes</td> </tr> <tr> <td><code>--isolation</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.35/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.35+</span></a><br>Service container isolation mode</td> </tr> <tr> <td><code>--label , -l</code></td> <td></td> <td>Service labels</td> </tr> <tr> <td><code>--limit-cpu</code></td> <td></td> <td>Limit CPUs</td> </tr> <tr> <td><code>--limit-memory</code></td> <td></td> <td>Limit Memory</td> </tr> <tr> <td><code>--log-driver</code></td> <td></td> <td>Logging driver for service</td> </tr> <tr> <td><code>--log-opt</code></td> <td></td> <td>Logging driver options</td> </tr> <tr> <td><code>--mode</code></td> <td><code>replicated</code></td> <td>Service mode (replicated or global)</td> </tr> <tr> <td><code>--mount</code></td> <td></td> <td>Attach a filesystem mount to the service</td> </tr> <tr> <td><code>--name</code></td> <td></td> <td>Service name</td> </tr> <tr> <td><code>--network</code></td> <td></td> <td>Network attachments</td> </tr> <tr> <td><code>--no-healthcheck</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Disable any container-specified HEALTHCHECK</td> </tr> <tr> <td><code>--no-resolve-image</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Do not query the registry to resolve image digest and supported platforms</td> </tr> <tr> <td><code>--placement-pref</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Add a placement preference</td> </tr> <tr> <td><code>--publish , -p</code></td> <td></td> <td>Publish a port as a node port</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress progress output</td> </tr> <tr> <td><code>--read-only</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Mount the container’s root filesystem as read only</td> </tr> <tr> <td><code>--replicas</code></td> <td></td> <td>Number of tasks</td> </tr> <tr> <td><code>--replicas-max-per-node</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Maximum number of tasks per node (default 0 = unlimited)</td> </tr> <tr> <td><code>--reserve-cpu</code></td> <td></td> <td>Reserve CPUs</td> </tr> <tr> <td><code>--reserve-memory</code></td> <td></td> <td>Reserve Memory</td> </tr> <tr> <td><code>--restart-condition</code></td> <td></td> <td>Restart when condition is met (“none”|”on-failure”|”any”) (default “any”)</td> </tr> <tr> <td><code>--restart-delay</code></td> <td></td> <td>Delay between restart attempts (ns|us|ms|s|m|h) (default 5s)</td> </tr> <tr> <td><code>--restart-max-attempts</code></td> <td></td> <td>Maximum number of restarts before giving up</td> </tr> <tr> <td><code>--restart-window</code></td> <td></td> <td>Window used to evaluate the restart policy (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--rollback-delay</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Delay between task rollbacks (ns|us|ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code>--rollback-failure-action</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Action on rollback failure (“pause”|”continue”) (default “pause”)</td> </tr> <tr> <td><code>--rollback-max-failure-ratio</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Failure rate to tolerate during a rollback (default 0)</td> </tr> <tr> <td><code>--rollback-monitor</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h) (default 5s)</td> </tr> <tr> <td><code>--rollback-order</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Rollback order (“start-first”|”stop-first”) (default “stop-first”)</td> </tr> <tr> <td><code>--rollback-parallelism</code></td> <td><code>1</code></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Maximum number of tasks rolled back simultaneously (0 to roll back all at once)</td> </tr> <tr> <td><code>--secret</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Specify secrets to expose to the service</td> </tr> <tr> <td><code>--stop-grace-period</code></td> <td></td> <td>Time to wait before force killing a container (ns|us|ms|s|m|h) (default 10s)</td> </tr> <tr> <td><code>--stop-signal</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Signal to stop the container</td> </tr> <tr> <td><code>--sysctl</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Sysctl options</td> </tr> <tr> <td><code>--tty , -t</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Allocate a pseudo-TTY</td> </tr> <tr> <td><code>--update-delay</code></td> <td></td> <td>Delay between updates (ns|us|ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code>--update-failure-action</code></td> <td></td> <td>Action on update failure (“pause”|”continue”|”rollback”) (default “pause”)</td> </tr> <tr> <td><code>--update-max-failure-ratio</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Failure rate to tolerate during an update (default 0)</td> </tr> <tr> <td><code>--update-monitor</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 5s)</td> </tr> <tr> <td><code>--update-order</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Update order (“start-first”|”stop-first”) (default “stop-first”)</td> </tr> <tr> <td><code>--update-parallelism</code></td> <td><code>1</code></td> <td>Maximum number of tasks updated simultaneously (0 to update all at once)</td> </tr> <tr> <td><code>--user , -u</code></td> <td></td> <td>Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td>Send registry authentication details to swarm agents</td> </tr> <tr> <td><code>--workdir , -w</code></td> <td></td> <td>Working directory inside the container</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-inspect',
            label: 'Display detailed information on one or more services',
            usage: 'docker service inspect [OPTIONS] SERVICE [SERVICE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code>--pretty</code></td> <td></td> <td>Print the information in a human friendly format</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-logs',
            label: 'Fetch the logs of a service or task',
            usage: 'docker service logs [OPTIONS] SERVICE|TASK',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--details</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.29 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Show extra details provided to logs</td> </tr> <tr> <td><code>--follow , -f</code></td> <td></td> <td>Follow log output</td> </tr> <tr> <td><code>--no-resolve</code></td> <td></td> <td>Do not map IDs to Names in output</td> </tr> <tr> <td><code>--no-task-ids</code></td> <td></td> <td>Do not include task IDs in output</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Do not truncate output</td> </tr> <tr> <td><code>--raw</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.29 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Do not neatly format logs</td> </tr> <tr> <td><code>--since</code></td> <td></td> <td>Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)</td> </tr> <tr> <td><code>--tail</code></td> <td><code>all</code></td> <td>Number of lines to show from the end of the logs</td> </tr> <tr> <td><code>--timestamps , -t</code></td> <td></td> <td>Show timestamps</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-ls',
            label: 'List services',
            usage: 'docker service ls [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print services using a Go template</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-ps',
            label: 'List the tasks of one or more services',
            usage: 'docker service ps [OPTIONS] SERVICE [SERVICE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print tasks using a Go template</td> </tr> <tr> <td><code>--no-resolve</code></td> <td></td> <td>Do not map IDs to Names</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Do not truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display task IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-rollback',
            label: 'Revert changes to a service’s configuration',
            usage: 'docker service rollback [OPTIONS] SERVICE',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--detach , -d</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.31 API reference (in a new window)" data-original-title="" title="">API 1.29+</span></a><br>Exit immediately instead of waiting for the service to converge</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress progress output</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-rm',
            label: 'Remove one or more services',
            usage: 'docker service rm SERVICE [SERVICE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> Removes the specified services from the swarm.'
        },
        {
            value: 'docker-service-scale',
            label: 'Scale one or multiple replicated services',
            usage: 'docker service scale SERVICE=REPLICAS [SERVICE=REPLICAS...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> The scale command enables you to scale one or more replicated services either up or down to the desired number of replicas. This command cannot be applied on services which are global mode. The command will return immediately, but the actual scaling of the service may take some time. To stop all replicas of a service while keeping the service active in the swarm you can set the scale to 0. <br><br> <span class="board__option-title">Options</span> <br><br> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--detach , -d</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Exit immediately instead of waiting for the service to converge</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-service-update',
            label: 'Update a service',
            usage: 'docker service update [OPTIONS] SERVICE',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+<</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the "docker version" command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--args</code></td> <td></td> <td>Service command args</td> </tr> <tr> <td><code>--config-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Add or update a config file on a service</td> </tr> <tr> <td><code>--config-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Remove a configuration file</td> </tr> <tr> <td><code>--constraint-add</code></td> <td></td> <td>Add or update a placement constraint</td> </tr> <tr> <td><code>--constraint-rm</code></td> <td></td> <td>Remove a constraint</td> </tr> <tr> <td><code>--container-label-add</code></td> <td></td> <td>Add or update a container label</td> </tr> <tr> <td><code>--container-label-rm</code></td> <td></td> <td>Remove a container label by its key</td> </tr> <tr> <td><code>--credential-spec</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Credential spec for managed service account (Windows only)</td> </tr> <tr> <td><code>--detach , -d</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Exit immediately instead of waiting for the service to converge</td> </tr> <tr> <td><code>--dns-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Add or update a custom DNS server</td> </tr> <tr> <td><code>--dns-option-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Add or update a DNS option</td> </tr> <tr> <td><code>--dns-option-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Remove a DNS option</td> </tr> <tr> <td><code>--dns-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Remove a custom DNS server</td> </tr> <tr> <td><code>--dns-search-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Add or update a custom DNS search domain</td> </tr> <tr> <td><code>--dns-search-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Remove a DNS search domain</td> </tr> <tr> <td><code>--endpoint-mode</code></td> <td></td> <td>Endpoint mode (vip or dnsrr)</td> </tr> <tr> <td><code>--entrypoint</code></td> <td></td> <td>Overwrite the default ENTRYPOINT of the image</td> </tr> <tr> <td><code>--env-add</code></td> <td></td> <td>Add or update an environment variable</td> </tr> <tr> <td><code>--env-rm</code></td> <td></td> <td>Remove an environment variable</td> </tr> <tr> <td><code>--force</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Force update even if no changes require it</td> </tr> <tr> <td><code>--generic-resource-add</code></td> <td></td> <td>Add a Generic resource</td> </tr> <tr> <td><code>--generic-resource-rm</code></td> <td></td> <td>Remove a Generic resource</td> </tr> <tr> <td><code>--group-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Add an additional supplementary user group to the container</td> </tr> <tr> <td><code>--group-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Remove a previously added supplementary user group from the container</td> </tr> <tr> <td><code>--health-cmd</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Command to run to check health</td> </tr> <tr> <td><code>--health-interval</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Time between running the check (ms|s|m|h)</td> </tr> <tr> <td><code>--health-retries</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Consecutive failures needed to report unhealthy</td> </tr> <tr> <td><code>--health-start-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)</td> </tr> <tr> <td><code>--health-timeout</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Maximum time to allow one check to run (ms|s|m|h)</td> </tr> <tr> <td><code>--host-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.32+</span></a><br>Add a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code>--host-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Remove a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code>--hostname</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Container hostname</td> </tr> <tr> <td><code>--image</code></td> <td></td> <td>Service image tag</td> </tr> <tr> <td><code>--init</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.37/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.37+</span></a><br>Use an init inside each service container to forward signals and reap processes</td> </tr> <tr> <td><code>--isolation</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.35/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.35+</span></a><br>Service container isolation mode</td> </tr> <tr> <td><code>--label-add</code></td> <td></td> <td>Add or update a service label</td> </tr> <tr> <td><code>--label-rm</code></td> <td></td> <td>Remove a label by its key</td> </tr> <tr> <td><code>--limit-cpu</code></td> <td></td> <td>Limit CPUs</td> </tr> <tr> <td><code>--limit-memory</code></td> <td></td> <td>Limit Memory</td> </tr> <tr> <td><code>--log-driver</code></td> <td></td> <td>Logging driver for service</td> </tr> <tr> <td><code>--log-opt</code></td> <td></td> <td>Logging driver options</td> </tr> <tr> <td><code>--mount-add</code></td> <td></td> <td>Add or update a mount on a service</td> </tr> <tr> <td><code>--mount-rm</code></td> <td></td> <td>Remove a mount by its target path</td> </tr> <tr> <td><code>--network-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Add a network</td> </tr> <tr> <td><code>--network-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Remove a network</td> </tr> <tr> <td><code>--no-healthcheck</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Disable any container-specified HEALTHCHECK</td> </tr> <tr> <td><code>--no-resolve-image</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><br>Do not query the registry to resolve image digest and supported platforms</td> </tr> <tr> <td><code>--placement-pref-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Add a placement preference</td> </tr> <tr> <td><code>--placement-pref-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Remove a placement preference</td> </tr> <tr> <td><code>--publish-add</code></td> <td></td> <td>Add or update a published port</td> </tr> <tr> <td><code>--publish-rm</code></td> <td></td> <td>Remove a published port by its target port</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Suppress progress output</td> </tr> <tr> <td><code>--read-only</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Mount the container’s root filesystem as read only</td> </tr> <tr> <td><code>--replicas</code></td> <td></td> <td>Number of tasks</td> </tr> <tr> <td><code>--replicas-max-per-node</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Maximum number of tasks per node (default 0 = unlimited)</td> </tr> <tr> <td><code>--reserve-cpu</code></td> <td></td> <td>Reserve CPUs</td> </tr> <tr> <td><code>--reserve-memory</code></td> <td></td> <td>Reserve Memory</td> </tr> <tr> <td><code>--restart-condition</code></td> <td></td> <td>Restart when condition is met (“none”|”on-failure”|”any”)</td> </tr> <tr> <td><code>--restart-delay</code></td> <td></td> <td>Delay between restart attempts (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--restart-max-attempts</code></td> <td></td> <td>Maximum number of restarts before giving up</td> </tr> <tr> <td><code>--restart-window</code></td> <td></td> <td>Window used to evaluate the restart policy (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--rollback</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Rollback to previous specification</td> </tr> <tr> <td><code>--rollback-delay</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Delay between task rollbacks (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--rollback-failure-action</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Action on rollback failure (“pause”|”continue”)</td> </tr> <tr> <td><code>--rollback-max-failure-ratio</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Failure rate to tolerate during a rollback</td> </tr> <tr> <td><code>--rollback-monitor</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--rollback-order</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Rollback order (“start-first”|”stop-first”)</td> </tr> <tr> <td><code>--rollback-parallelism</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Maximum number of tasks rolled back simultaneously (0 to roll back all at once)</td> </tr> <tr> <td><code>--secret-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Add or update a secret on a service</td> </tr> <tr> <td><code>--secret-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Remove a secret</td> </tr> <tr> <td><code>--stop-grace-period</code></td> <td></td> <td>Time to wait before force killing a container (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--stop-signal</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Signal to stop the container</td> </tr> <tr> <td><code>--sysctl-add</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Add or update a Sysctl option</td> </tr> <tr> <td><code>--sysctl-rm</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Remove a Sysctl option</td> </tr> <tr> <td><code>--tty , -t</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Allocate a pseudo-TTY</td> </tr> <tr> <td><code>--update-delay</code></td> <td></td> <td>Delay between updates (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--update-failure-action</code></td> <td></td> <td>Action on update failure (“pause”|”continue”|”rollback”)</td> </tr> <tr> <td><code>--update-max-failure-ratio</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Failure rate to tolerate during an update</td> </tr> <tr> <td><code>--update-monitor</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a><br>Duration after each task update to monitor for failure (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code>--update-order</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank">API 1.29+</a><br>Update order (“start-first”|”stop-first”)</td> </tr> <tr> <td><code>--update-parallelism</code></td> <td></td> <td>Maximum number of tasks updated simultaneously (0 to update all at once)</td> </tr> <tr> <td><code>--user , -u</code></td> <td></td> <td>Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td>Send registry authentication details to swarm agents</td> </tr> <tr> <td><code>--workdir , -w</code></td> <td></td> <td>Working directory inside the container</td> </tr> </tbody></table>'
        }
    ],
    "docker-plugin": [
        {
            value: 'docker-plugin-create',
            label: 'Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory.',
            usage: 'docker plugin create [OPTIONS] PLUGIN PLUGIN-DATA-DIR',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Creates a plugin. Before creating the plugin, prepare the plugin’s root filesystem as well as the config.json  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--compress</code></td> <td></td> <td>Compress the context using gzip</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-disable',
            label: 'Disable a plugin',
            usage: 'docker plugin disable [OPTIONS] PLUGIN',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Disables a plugin. The plugin must be installed before it can be disabled, see docker plugin install. Without the -f option, a plugin that has references (e.g., volumes, networks) cannot be disabled. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--force , -f</code></td> <td></td> <td>Force the disable of an active plugin</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-enable',
            label: 'Enable a plugin',
            usage: 'docker plugin enable [OPTIONS] PLUGIN',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Enables a plugin. The plugin must be installed before it can be enabled, see docker plugin install. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--timeout</code></td> <td><code>30</code></td> <td>HTTP client timeout (in seconds)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-inspect',
            label: 'Display detailed information on one or more plugins',
            usage: 'docker plugin inspect [OPTIONS] PLUGIN [PLUGIN...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Returns information about a plugin. By default, this command renders all results in a JSON array. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-install',
            label: 'Install a plugin',
            usage: 'docker plugin install [OPTIONS] PLUGIN [KEY=VALUE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Installs and enables a plugin. Docker looks first for the plugin on your Docker host. If the plugin does not exist locally, then the plugin is pulled from the registry. Note that the minimum required registry version to distribute plugins is 2.3.0  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--alias</code></td> <td></td> <td>Local name for plugin</td> </tr> <tr> <td><code>--disable</code></td> <td></td> <td>Do not enable the plugin on install</td> </tr> <tr> <td><code>--disable-content-trust</code></td> <td><code>true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code>--grant-all-permissions</code></td> <td></td> <td>Grant all permissions necessary to run the plugin</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-ls',
            label: 'List plugins',
            usage: 'docker plugin ls [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Lists all the plugins that are currently installed. You can install plugins using the docker plugin install command. You can also filter using the -f or --filter flag. Refer to the filtering section for more information about available filter options. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Provide filter values (e.g. ‘enabled=true’)</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print plugins using a Go template</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display plugin IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-rm',
            label: 'Remove one or more plugins',
            usage: 'docker plugin rm [OPTIONS] PLUGIN [PLUGIN...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Lists all the plugins that are currently installed. You can install plugins using the docker plugin install command. You can also filter using the -f or --filter flag. Refer to the filtering section for more information about available filter options. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Provide filter values (e.g. ‘enabled=true’)</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print plugins using a Go template</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display plugin IDs</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-plugin-set',
            label: 'Change settings for a plugin',
            usage: 'docker plugin set PLUGIN KEY=VALUE [KEY=VALUE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Change settings for a plugin. The plugin must be disabled.'
        },
        {
            value: 'docker-plugin-upgrade',
            label: 'Upgrade an existing plugin',
            usage: 'docker plugin upgrade [OPTIONS] PLUGIN [REMOTE]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Upgrades an existing plugin to the specified remote plugin image. If no remote is specified, Docker will re-pull the current image and use the updated version. All existing references to the plugin will continue to work. The plugin must be disabled before running the upgrade. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--disable-content-trust</code></td> <td><code>true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code>--grant-all-permissions</code></td> <td></td> <td>Grant all permissions necessary to run the plugin</td> </tr> <tr> <td><code>--skip-remote-check</code></td> <td></td> <td>Do not check if specified remote plugin matches existing plugin image</td> </tr> </tbody></table>'
        }
    ],
    "docker-stacks": [
        {
            value: 'docker-stack-deploy',
            label: 'Deploy a new stack or update an existing stack',
            usage: 'docker stack deploy [OPTIONS] STACK',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the <code>docker version</code> command on the client to check your client and daemon API versions. <br><br> Create and update a stack from a compose file on the swarm. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--bundle-file</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank">experimental (daemon)</a><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Swarm orchestrator.">Swarm</span><br>Path to a Distributed Application Bundle file</td> </tr> <tr> <td><code>--compose-file , -c</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.25 API reference (in a new window)" data-original-title="" title="">API 1.25+</span></a><br>Path to a Compose file, or “-“ to read from stdin</td> </tr> <tr> <td><code>--namespace</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes namespace to use</td> </tr> <tr> <td><code>--prune</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.27/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.25 API reference (in a new window)" data-original-title="" title="">API 1.27+</span></a><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Swarm orchestrator.">Swarm</span><br>Prune services that are no longer referenced</td> </tr> <tr> <td><code>--resolve-image</code></td> <td><code>always</code></td> <td><a href="https://docs.docker.com/engine/api/v1.30/" target="_blank"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.25 API reference (in a new window)" data-original-title="" title="">API 1.30+</span></a><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Swarm orchestrator.">Swarm</span><br>Query the registry to resolve image digest and supported platforms (“always”|”changed”|”never”)</td> </tr> <tr> <td><code>--with-registry-auth</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Swarm orchestrator.">Swarm</span><br>Send registry authentication details to Swarm agents</td> </tr> <tr> <td><code>--kubeconfig</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes config file</td> </tr> <tr> <td><code>--orchestrator</code></td> <td></td> <td>Orchestrator to use (swarm|kubernetes|all)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-stack-ps',
            label: 'List the tasks in the stack',
            usage: 'docker stack ps [OPTIONS] STACK',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the <code>docker version</code> command on the client to check your client and daemon API versions. <br><br> Lists the tasks that are running as part of the specified stack. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print tasks using a Go template</td> </tr> <tr> <td><code>--namespace</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes namespace to use</td> </tr> <tr> <td><code>--no-resolve</code></td> <td></td> <td>Do not map IDs to Names</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Do not truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display task IDs</td> </tr> <tr> <td><code>--kubeconfig</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes config file</td> </tr> <tr> <td><code>--orchestrator</code></td> <td></td> <td>Orchestrator to use (swarm|kubernetes|all)</td> </tr> </tbody></table>'
        },
        {
            value: 'docker-stack-rm',
            label: 'Remove one or more stacks',
            usage: 'docker stack rm [OPTIONS] STACK [STACK...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the <code>docker version</code> command on the client to check your client and daemon API versions. <br><br> Remove the stack from the swarm. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--namespace</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes namespace to use</td> </tr> <tr> <td><code>--kubeconfig</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes config file</td> </tr> <tr> <td><code>--orchestrator</code></td> <td></td> <td>Orchestrator to use (swarm|kubernetes|all)</td> </tr></tbody></table>'
        },
        {
            value: 'docker-stack-services',
            label: 'List the services in the stack',
            usage: 'docker stack services [OPTIONS] STACK',
            nb: '<a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">API 1.25+</a> The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.25/" target="_blank">1.25</a> to use this command. Use the <code>docker version</code> command on the client to check your client and daemon API versions. <br><br> Lists the services that are running as part of the specified stack. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print services using a Go template</td> </tr> <tr> <td><code>--namespace</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes namespace to use</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display IDs</td> </tr> <tr> <td><code>--kubeconfig</code></td> <td></td> <td><span class="badge badge-info" data-toggle="tooltip" title="" data-original-title="This option works for the Kubernetes orchestrator.">Kubernetes</span><br>Kubernetes config file</td> </tr> <tr> <td><code>--orchestrator</code></td> <td></td> <td>Orchestrator to use (swarm|kubernetes|all)</td> </tr> </tbody></table>'
        }
    ],
    "docker-node": [
        {
            value: 'docker-node-demote',
            label: 'Demote one or more nodes from manager in the swarm',
            usage: 'docker node demote NODE [NODE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Demotes an existing manager so that it is no longer a manager.'
        },
        {
            value: 'docker-node-inspect',
            label: 'Display detailed information on one or more nodes',
            usage: 'docker node inspect [OPTIONS] self|NODE [NODE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Returns information about a node. By default, this command renders all results in a JSON array. You can specify an alternate format to execute a given template for each result. Go’s text/template package describes all the details of the format. <br><br> Lists all the nodes that the Docker Swarm manager knows about. You can filter using the -f or --filter flag. Refer to the filtering section for more information about available filter options. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code>--pretty</code></td> <td></td> <td>Print the information in a human friendly format</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-node-ls',
            label: 'List nodes in the swarm',
            usage: 'docker node ls [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print nodes using a Go template</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display IDs</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-node-promote',
            label: 'Promote one or more nodes to manager in the swarm',
            usage: 'docker node promote NODE [NODE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Promotes a node to manager. This command can only be executed on a manager node.'
        },
        {
            value: 'docker-node-ps',
            label: 'List tasks running on one or more nodes, defaults to current node',
            usage: 'docker node ps [OPTIONS] [NODE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Lists all the tasks on a Node that Docker knows about. You can filter using the -f or --filter flag. Refer to the filtering section for more information about available filter options. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code>--format</code></td> <td></td> <td>Pretty-print tasks using a Go template</td> </tr> <tr> <td><code>--no-resolve</code></td> <td></td> <td>Do not map IDs to Names</td> </tr> <tr> <td><code>--no-trunc</code></td> <td></td> <td>Do not truncate output</td> </tr> <tr> <td><code>--quiet , -q</code></td> <td></td> <td>Only display task IDs</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-node-rm',
            label: 'Remove one or more nodes from the swarm',
            usage: 'docker node rm [OPTIONS] NODE [NODE...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Removes the specified nodes from a swarm. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--force , -f</code></td> <td></td> <td>Force remove a node from the swarm</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-node-update',
            label: 'Update a node',
            usage: 'docker node update [OPTIONS] NODE',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Update metadata about a node, such as its availability, labels, or roles. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code>--availability</code></td> <td></td> <td>Availability of the node (“active”|”pause”|”drain”)</td> </tr> <tr> <td><code>--label-add</code></td> <td></td> <td>Add or update a node label (key=value)</td> </tr> <tr> <td><code>--label-rm</code></td> <td></td> <td>Remove a node label if exists</td> </tr> <tr> <td><code>--role</code></td> <td></td> <td>Role of the node (“worker”|”manager”)</td> </tr> <!-- end for option --></tbody></table>'
        }
    ],
    "docker-swarm": [
        {
            value: 'docker-swarm-ca',
            label: 'Display and rotate the root CA',
            usage: 'docker swarm ca [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> View or rotate the current swarm CA certificate. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--ca-cert</code></td> <td></td> <td>Path to the PEM-formatted root CA certificate to use for the new cluster</td> </tr> <tr> <td><code class="highlighter-rouge">--ca-key</code></td> <td></td> <td>Path to the PEM-formatted root CA key to use for the new cluster</td> </tr> <tr> <td><code class="highlighter-rouge">--cert-expiry</code></td> <td><code class="highlighter-rouge">2160h0m0s</code></td> <td>Validity period for node certificates (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code class="highlighter-rouge">--detach , -d</code></td> <td></td> <td>Exit immediately instead of waiting for the root rotation to converge</td> </tr> <tr> <td><code class="highlighter-rouge">--external-ca</code></td> <td></td> <td>Specifications of one or more certificate signing endpoints</td> </tr> <tr> <td><code class="highlighter-rouge">--quiet , -q</code></td> <td></td> <td>Suppress progress output</td> </tr> <tr> <td><code class="highlighter-rouge">--rotate</code></td> <td></td> <td>Rotate the swarm CA - if no certificate or key are provided, new ones will be generated</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-swarm-init',
            label: 'Initialize a swarm',
            usage: 'docker swarm init [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Initialize a swarm. The docker engine targeted by this command becomes a manager in the newly created single-node swarm. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--advertise-addr</code></td> <td></td> <td>Advertised address (format: &lt;ip|interface&gt;[:port])</td> </tr> <tr> <td><code class="highlighter-rouge">--autolock</code></td> <td></td> <td>Enable manager autolocking (requiring an unlock key to start a stopped manager)</td> </tr> <tr> <td><code class="highlighter-rouge">--availability</code></td> <td><code class="highlighter-rouge">active</code></td> <td>Availability of the node (“active”|”pause”|”drain”)</td> </tr> <tr> <td><code class="highlighter-rouge">--cert-expiry</code></td> <td><code class="highlighter-rouge">2160h0m0s</code></td> <td>Validity period for node certificates (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code class="highlighter-rouge">--data-path-addr</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.31/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.31+</span></a><br>Address or interface to use for data path traffic (format: &lt;ip|interface&gt;)</td> </tr> <tr> <td><code class="highlighter-rouge">--data-path-port</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.40+</span></a><br>Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used.</td> </tr> <tr> <td><code class="highlighter-rouge">--default-addr-pool</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.39/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.39+</span></a><br>default address pool in CIDR format</td> </tr> <tr> <td><code class="highlighter-rouge">--default-addr-pool-mask-length</code></td> <td><code class="highlighter-rouge">24</code></td> <td><a href="https://docs.docker.com/engine/api/v1.39/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.39+</span></a><br>default address pool subnet mask length</td> </tr> <tr> <td><code class="highlighter-rouge">--dispatcher-heartbeat</code></td> <td><code class="highlighter-rouge">5s</code></td> <td>Dispatcher heartbeat period (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code class="highlighter-rouge">--external-ca</code></td> <td></td> <td>Specifications of one or more certificate signing endpoints</td> </tr> <tr> <td><code class="highlighter-rouge">--force-new-cluster</code></td> <td></td> <td>Force create a new cluster from current state</td> </tr> <tr> <td><code class="highlighter-rouge">--listen-addr</code></td> <td><code class="highlighter-rouge">0.0.0.0:2377</code></td> <td>Listen address (format: &lt;ip|interface&gt;[:port])</td> </tr> <tr> <td><code class="highlighter-rouge">--max-snapshots</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.25+</span></a><br>Number of additional Raft snapshots to retain</td> </tr> <tr> <td><code class="highlighter-rouge">--snapshot-interval</code></td> <td><code class="highlighter-rouge">10000</code></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.25+</span></a><br>Number of log entries between Raft snapshots</td> </tr> <tr> <td><code class="highlighter-rouge">--task-history-limit</code></td> <td><code class="highlighter-rouge">5</code></td> <td>Task history retention limit</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-swarm-join-token',
            label: 'Manage join tokens',
            usage: 'docker swarm join-token [OPTIONS] (worker|manager)',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--quiet , -q</code></td> <td></td> <td>Only display token</td> </tr> <tr> <td><code class="highlighter-rouge">--rotate</code></td> <td></td> <td>Rotate join token</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-swarm-join',
            label: 'Join a swarm as a node and/or manager',
            usage: 'docker swarm join [OPTIONS] HOST:PORT',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Join a node to a swarm. The node joins as a manager node or worker node based upon the token you pass with the --token flag. If you pass a manager token, the node joins as a manager. If you pass a worker token, the node joins as a worker. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--advertise-addr</code></td> <td></td> <td>Advertised address (format: &lt;ip|interface&gt;[:port])</td> </tr> <tr> <td><code class="highlighter-rouge">--availability</code></td> <td><code class="highlighter-rouge">active</code></td> <td>Availability of the node (“active”|”pause”|”drain”)</td> </tr> <tr> <td><code class="highlighter-rouge">--data-path-addr</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.31/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.31+</span></a><br>Address or interface to use for data path traffic (format: &lt;ip|interface&gt;)</td> </tr> <tr> <td><code class="highlighter-rouge">--listen-addr</code></td> <td><code class="highlighter-rouge">0.0.0.0:2377</code></td> <td>Listen address (format: &lt;ip|interface&gt;[:port])</td> </tr> <tr> <td><code class="highlighter-rouge">--token</code></td> <td></td> <td>Token for entry into the swarm</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-swarm-leave',
            label: 'Leave the swarm',
            usage: 'docker swarm leave [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> When you run this command on a worker, that worker leaves the swarm. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--force , -f</code></td> <td></td> <td>Force this node to leave the swarm, ignoring warnings</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-swarm-unlock-key',
            label: 'Manage the unlock key',
            usage: 'docker swarm unlock-key [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--quiet , -q</code></td> <td></td> <td>Only display token</td> </tr> <tr> <td><code class="highlighter-rouge">--rotate</code></td> <td></td> <td>Rotate unlock key</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-swarm-unlock',
            label: 'Unlock swarm',
            usage: 'docker swarm unlock',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br>Unlocks a locked manager using a user-supplied unlock key. This command must be used to reactivate a manager after its Docker daemon restarts if the autolock setting is turned on. The unlock key is printed at the time when autolock is enabled, and is also available from the docker swarm unlock-key command.'
        },
        {
            value: 'docker-swarm-update',
            label: 'Update the swarm',
            usage: 'docker swarm update [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">API 1.24+</a>The client and daemon API must both be at least <a href="https://docs.docker.com/engine/api/v1.24/" target="_blank">1.24</a> to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--autolock</code></td> <td></td> <td>Change manager autolocking setting (true|false)</td> </tr> <tr> <td><code class="highlighter-rouge">--cert-expiry</code></td> <td><code class="highlighter-rouge">2160h0m0s</code></td> <td>Validity period for node certificates (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code class="highlighter-rouge">--dispatcher-heartbeat</code></td> <td><code class="highlighter-rouge">5s</code></td> <td>Dispatcher heartbeat period (ns|us|ms|s|m|h)</td> </tr> <tr> <td><code class="highlighter-rouge">--external-ca</code></td> <td></td> <td>Specifications of one or more certificate signing endpoints</td> </tr> <tr> <td><code class="highlighter-rouge">--max-snapshots</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.25+</span></a><br>Number of additional Raft snapshots to retain</td> </tr> <tr> <td><code class="highlighter-rouge">--snapshot-interval</code></td> <td><code class="highlighter-rouge">10000</code></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.24 API reference (in a new window)" data-original-title="" title="">API 1.25+</span></a><br>Number of log entries between Raft snapshots</td> </tr> <tr> <td><code class="highlighter-rouge">--task-history-limit</code></td> <td><code class="highlighter-rouge">5</code></td> <td>Task history retention limit</td> </tr> <!-- end for option --></tbody></table>'
        }
    ],
    "docker-system": [
        {
            value: 'docker-system-df',
            label: 'Show docker disk usage',
            usage: 'docker system df [OPTIONS]',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> The docker system df command displays information regarding the amount of disk space used by the docker daemon. <br><br><span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format</code></td> <td></td> <td>Pretty-print images using a Go template</td> </tr> <tr> <td><code class="highlighter-rouge">--verbose , -v</code></td> <td></td> <td>Show detailed information on space usage</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-system-events',
            label: 'Get real time events from the server',
            usage: 'docker system events [OPTIONS]',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Use docker system events to get real-time events from the server. These events differ per Docker object type. <br><br><span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code class="highlighter-rouge">--format</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code class="highlighter-rouge">--since</code></td> <td></td> <td>Show all events created since timestamp</td> </tr> <tr> <td><code class="highlighter-rouge">--until</code></td> <td></td> <td>Stream events until this timestamp</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-system-info',
            label: 'Display system-wide information',
            usage: 'docker system info [OPTIONS]',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-system-prune',
            label: 'Remove unused data',
            usage: 'docker system prune [OPTIONS]',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Remove all unused containers, networks, images (both dangling and unreferenced), and optionally, volumes. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--all , -a</code></td> <td></td> <td>Remove all unused images not just dangling ones</td> </tr> <tr> <td><code class="highlighter-rouge">--filter</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.28/" target="_blank" class="_"><span class="badge badge-info" data-toggle="tooltip" ttitle="Open the 1.25 API reference (in a new window)" data-original-title="" title="">API 1.28+</span></a><br>Provide filter values (e.g. "label=<key>=<value>")</value></key></td> </tr> <tr> <td><code class="highlighter-rouge">--force , -f</code></td> <td></td> <td>Do not prompt for confirmation</td> </tr> <tr> <td><code class="highlighter-rouge">--volumes</code></td> <td></td> <td>Prune volumes</td> </tr> <!-- end for option --></tbody></table>'
        },
    ],
    "docker-template": [
        {
            value: 'docker-template-config-set',
            label: 'Set default values for docker template',
            usage: 'docker template config set',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> This command is experimental on the Docker client <br> It should not be used in production environments. <br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">config.json</a> and set <code class="highlighter-rouge">experimental</code> to <code class="highlighter-rouge">enabled</code>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features">here</a> for more information. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--feedback</code></td> <td></td> <td>Send anonymous feedback about usage (performance, failure status, os, version)</td> </tr> <tr> <td><code class="highlighter-rouge">--no-feedback</code></td> <td></td> <td>Don’t send anonymous feedback</td> </tr> <tr> <td><code class="highlighter-rouge">--org</code></td> <td></td> <td>Set default organization / docker hub user</td> </tr> <tr> <td><code class="highlighter-rouge">--server</code></td> <td></td> <td>Set default registry server (host[:port])</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-template-config-view',
            label: 'View default values for docker template',
            usage: 'docker template config view',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> This command is experimental on the Docker client <br> It should not be used in production environments. <br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">config.json</a> and set <code class="highlighter-rouge">experimental</code> to <code class="highlighter-rouge">enabled</code>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features">here</a> for more information. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format</code></td> <td><code class="highlighter-rouge">yaml</code></td> <td>Configure the output format (json|yaml)</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-template-inspect',
            label: 'Inspect service templates or application templates',
            usage: 'docker template inspect <service or application>',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> This command is experimental on the Docker client <br> It should not be used in production environments. <br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">config.json</a> and set <code class="highlighter-rouge">experimental</code> to <code class="highlighter-rouge">enabled</code>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features">here</a> for more information. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format</code></td> <td><code class="highlighter-rouge">pretty</code></td> <td>Configure the output format (pretty|json|yaml)</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-template-list',
            label: 'List available templates with their informations',
            usage: 'docker template list',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> This command is experimental on the Docker client <br> It should not be used in production environments. <br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">config.json</a> and set <code class="highlighter-rouge">experimental</code> to <code class="highlighter-rouge">enabled</code>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features">here</a> for more information. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format</code></td> <td><code class="highlighter-rouge">pretty</code></td> <td>Configure the output format (pretty|json|yaml)</td> </tr> <tr> <td><code class="highlighter-rouge">--type</code></td> <td><code class="highlighter-rouge">all</code></td> <td>Filter by type (application|service|all)</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-template-scaffold',
            label: 'Choose an application template or service template(s) and scaffold a new project',
            usage: 'docker template scaffold application [<alias=service>...] OR scaffold [alias=]service [<[alias=]service>...]',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> This command is experimental on the Docker client <br> It should not be used in production environments. <br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">config.json</a> and set <code class="highlighter-rouge">experimental</code> to <code class="highlighter-rouge">enabled</code>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features">here</a> for more information. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--name</code></td> <td></td> <td>Application name</td> </tr> <tr> <td><code class="highlighter-rouge">--org</code></td> <td></td> <td>Deploy to a specific organization / docker hub user (if not specified, it will use your current hub login)</td> </tr> <tr> <td><code class="highlighter-rouge">--path</code></td> <td></td> <td>Deploy to a specific path</td> </tr> <tr> <td><code class="highlighter-rouge">--platform</code></td> <td><code class="highlighter-rouge">linux</code></td> <td>Target platform (linux|windows)</td> </tr> <tr> <td><code class="highlighter-rouge">--server</code></td> <td></td> <td>Deploy to a specific registry server (host[:port])</td> </tr> <tr> <td><code class="highlighter-rouge">--set , -s</code></td> <td></td> <td>Override parameters values (service.name=value)</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-template-version',
            label: 'Print version information',
            usage: 'docker template version',
            nb: 'This command is only available on Docker Enterprise Edition. Learn more about <a href="https://docs.docker.com/ee/supported-platforms/" target="_blank">Docker Enterprise products</a>. <br><br> This command is experimental on the Docker client <br> It should not be used in production environments. <br> To enable experimental features in the Docker CLI, edit the <a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">config.json</a> and set <code class="highlighter-rouge">experimental</code> to <code class="highlighter-rouge">enabled</code>. You can go <a href="https://docs.docker.com/engine/reference/commandline/cli/#experimental-features">here</a> for more information.'
        }
    ],
    "docker-trust": [
        {
            value: 'docker-trust-inspect',
            label: 'Return low-level information about keys and signatures',
            usage: 'docker trust inspect IMAGE[:TAG] [IMAGE[:TAG]...]',
            nb: 'docker trust inspect provides low-level JSON information on signed repositories. This includes all image tags that are signed, who signed them, and who can sign new tags. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--pretty</code></td> <td></td> <td>Print the information in a human friendly format</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-trust-key',
            label: 'Manage keys for signing Docker images',
            usage: 'docker trust key COMMAND',
            nb: ''
        },
        {
            value: 'docker-trust-key-generate',
            label: 'Generate and load a signing key-pair',
            usage: 'docker trust key generate NAME',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--dir</code></td> <td></td> <td>Directory to generate key in, defaults to current directory</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-trust-key-load',
            label: 'Load a private key file for signing',
            usage: 'docker trust key load [OPTIONS] KEYFILE',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--name</code></td> <td><code class="highlighter-rouge">signer</code></td> <td>Name for the loaded key</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-trust-revoke',
            label: 'Remove signatures from tags in signed repositories.',
            usage: 'docker trust revoke [OPTIONS] IMAGE[:TAG]',
            nb: ''
        },
        {
            value: 'docker-trust-sign',
            label: 'Sign an image',
            usage: 'docker trust sign IMAGE:TAG',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--local</code></td> <td></td> <td>Sign a locally tagged image</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-trust-signer',
            label: 'Manage entities who can sign Docker images',
            usage: 'docker trust signer COMMAND',
            nb: ''
        },
        {
            value: 'docker-trust-signer-add',
            label: 'Add a signer',
            usage: 'docker trust signer add OPTIONS NAME REPOSITORY [REPOSITORY...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--key</code></td> <td></td> <td>Path to the signer’s public key file</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-trust-signer-remove',
            label: 'Remove a signer',
            usage: 'docker trust signer remove [OPTIONS] NAME REPOSITORY [REPOSITORY...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--key</code></td> <td></td> <td>Path to the signer’s public key file</td> </tr> <!-- end for option --></tbody></table> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--force , -f</code></td> <td></td> <td>Do not prompt for confirmation before removing the most recent signer</td> </tr> <!-- end for option --></tbody></table>'
        }
    ],
    "docker-volume": [
        {
            value: 'docker-volume-create',
            label: 'Create a volume',
            usage: 'docker volume create [OPTIONS] [VOLUME]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network.  <br><br> Creates a new volume that containers can consume and store data in. If a name is not specified, Docker generates a random name. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--driver , -d</code></td> <td><code class="highlighter-rouge">local</code></td> <td>Specify volume driver name</td> </tr> <tr> <td><code class="highlighter-rouge">--label</code></td> <td></td> <td>Set metadata for a volume</td> </tr> <tr> <td><code class="highlighter-rouge">--name</code></td> <td></td> <td>Specify volume name</td> </tr> <tr> <td><code class="highlighter-rouge">--opt , -o</code></td> <td></td> <td>Set driver specific options</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-volume-inspect',
            label: 'Display detailed information on one or more volumes',
            usage: 'docker volume inspect [OPTIONS] VOLUME [VOLUME...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network. <br><br> Returns information about a volume. By default, this command renders all results in a JSON array. You can specify an alternate format to execute a given template for each result. Go’s text/template package describes all the details of the format. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-volume-ls',
            label: 'List volumes',
            usage: 'docker volume ls [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network.  <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--filter , -f</code></td> <td></td> <td>Provide filter values (e.g. ‘dangling=true’)</td> </tr> <tr> <td><code class="highlighter-rouge">--format</code></td> <td></td> <td>Pretty-print volumes using a Go template</td> </tr> <tr> <td><code class="highlighter-rouge">--quiet , -q</code></td> <td></td> <td>Only display volume names</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-volume-prune',
            label: 'Remove all unused local volumes',
            usage: 'docker volume prune [OPTIONS]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network.  <br><br> Remove all unused local volumes. Unused local volumes are those which are not referenced by any containers<br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--filter</code></td> <td></td> <td>Provide filter values (e.g. ‘label=<label>’)</label></td> </tr> <tr> <td><code class="highlighter-rouge">--force , -f</code></td> <td></td> <td>Do not prompt for confirmation</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-volume-rm',
            label: 'Remove one or more volumes',
            usage: 'docker volume rm [OPTIONS] VOLUME [VOLUME...]',
            nb: '<a href="https://docs.docker.com/engine/api/v1.21/" target="_blank">API 1.21+</a> The client and daemon API must both be at least 1.21 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> Connects a container to a network. You can connect a container by name or by ID. Once connected, the container can communicate with other containers in the same network.  <br><br> Remove one or more volumes. You cannot remove a volume that is in use by a container.'
        },
    ],
    "docker-containers": [
        {
            value: 'docker-container-attach',
            label: 'Attach local standard input, output, and error streams to a running container',
            usage: 'docker container attach [OPTIONS] CONTAINER-NAME',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--detach-keys</code></td> <td></td> <td>Override the key sequence for detaching a container</td> </tr> <tr> <td><code class="highlighter-rouge">--no-stdin</code></td> <td></td> <td>Do not attach STDIN</td> </tr> <tr> <td><code class="highlighter-rouge">--sig-proxy</code></td> <td><code class="highlighter-rouge">true</code></td> <td>Proxy all received signals to the process</td> </tr></tbody></table>'
        },
        {
            value: 'docker-container-commit',
            label: 'Create a new image from a container’s changes',
            usage: 'docker container commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--author , -a</code></td> <td></td> <td>Author (e.g., “John Hannibal Smith <a href="mailto:hannibal@a-team.com">hannibal@a-team.com</a>”)</td> </tr> <tr> <td><code class="highlighter-rouge">--change , -c</code></td> <td></td> <td>Apply Dockerfile instruction to the created image</td> </tr> <tr> <td><code class="highlighter-rouge">--message , -m</code></td> <td></td> <td>Commit message</td> </tr> <tr> <td><code class="highlighter-rouge">--pause , -p</code></td> <td><code class="highlighter-rouge">true</code></td> <td>Pause container during commit</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-cp',
            label: 'Copy files/folders between a container and the local filesystem',
            usage: 'docker container cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH| \n\ndocker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH',
            nb: 'Copy files/folders between a container and the local filesystem <br><br> Use ‘-‘ as the source to read a tar archive from stdin and extract it to a directory destination in a container. Use ‘-‘ as the destination to stream a tar archive of a container source to stdout. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--archive , -a</code></td> <td></td> <td>Archive mode (copy all uid/gid information)</td> </tr> <tr> <td><code class="highlighter-rouge">--follow-link , -L</code></td> <td></td> <td>Always follow symbol link in SRC_PATH</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-create',
            label: 'Create a new container',
            usage: 'docker container create [OPTIONS] IMAGE [COMMAND] [ARG...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--add-host</code></td> <td></td> <td>Add a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code class="highlighter-rouge">--attach , -a</code></td> <td></td> <td>Attach to STDIN, STDOUT or STDERR</td> </tr> <tr> <td><code class="highlighter-rouge">--blkio-weight</code></td> <td></td> <td>Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)</td> </tr> <tr> <td><code class="highlighter-rouge">--blkio-weight-device</code></td> <td></td> <td>Block IO weight (relative device weight)</td> </tr> <tr> <td><code class="highlighter-rouge">--cap-add</code></td> <td></td> <td>Add Linux capabilities</td> </tr> <tr> <td><code class="highlighter-rouge">--cap-drop</code></td> <td></td> <td>Drop Linux capabilities</td> </tr> <tr> <td><code class="highlighter-rouge">--cgroup-parent</code></td> <td></td> <td>Optional parent cgroup for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--cidfile</code></td> <td></td> <td>Write the container ID to the file</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-count</code></td> <td></td> <td>CPU count (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-percent</code></td> <td></td> <td>CPU percent (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-period</code></td> <td></td> <td>Limit CPU CFS (Completely Fair Scheduler) period</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-quota</code></td> <td></td> <td>Limit CPU CFS (Completely Fair Scheduler) quota</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-rt-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Limit CPU real-time period in microseconds</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-rt-runtime</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Limit CPU real-time runtime in microseconds</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-shares , -c</code></td> <td></td> <td>CPU shares (relative weight)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpus</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Number of CPUs</td> </tr> <tr> <td><code class="highlighter-rouge">--cpuset-cpus</code></td> <td></td> <td>CPUs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpuset-mems</code></td> <td></td> <td>MEMs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code class="highlighter-rouge">--device</code></td> <td></td> <td>Add a host device to the container</td> </tr> <tr> <td><code class="highlighter-rouge">--device-cgroup-rule</code></td> <td></td> <td>Add a rule to the cgroup allowed devices list</td> </tr> <tr> <td><code class="highlighter-rouge">--device-read-bps</code></td> <td></td> <td>Limit read rate (bytes per second) from a device</td> </tr> <tr> <td><code class="highlighter-rouge">--device-read-iops</code></td> <td></td> <td>Limit read rate (IO per second) from a device</td> </tr> <tr> <td><code class="highlighter-rouge">--device-write-bps</code></td> <td></td> <td>Limit write rate (bytes per second) to a device</td> </tr> <tr> <td><code class="highlighter-rouge">--device-write-iops</code></td> <td></td> <td>Limit write rate (IO per second) to a device</td> </tr> <tr> <td><code class="highlighter-rouge">--disable-content-trust</code></td> <td><code class="highlighter-rouge">true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code class="highlighter-rouge">--dns</code></td> <td></td> <td>Set custom DNS servers</td> </tr> <tr> <td><code class="highlighter-rouge">--dns-opt</code></td> <td></td> <td>Set DNS options</td> </tr> <tr> <td><code class="highlighter-rouge">--dns-option</code></td> <td></td> <td>Set DNS options</td> </tr> <tr> <td><code class="highlighter-rouge">--dns-search</code></td> <td></td> <td>Set custom DNS search domains</td> </tr> <tr> <td><code class="highlighter-rouge">--domainname</code></td> <td></td> <td>Container NIS domain name</td> </tr> <tr> <td><code class="highlighter-rouge">--entrypoint</code></td> <td></td> <td>Overwrite the default ENTRYPOINT of the image</td> </tr> <tr> <td><code class="highlighter-rouge">--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code class="highlighter-rouge">--env-file</code></td> <td></td> <td>Read in a file of environment variables</td> </tr> <tr> <td><code class="highlighter-rouge">--expose</code></td> <td></td> <td>Expose a port or a range of ports</td> </tr> <tr> <td><code class="highlighter-rouge">--gpus</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank" class="_"><span>API 1.40+</span></a><br>GPU devices to add to the container (‘all’ to pass all GPUs)</td> </tr> <tr> <td><code class="highlighter-rouge">--group-add</code></td> <td></td> <td>Add additional groups to join</td> </tr> <tr> <td><code class="highlighter-rouge">--health-cmd</code></td> <td></td> <td>Command to run to check health</td> </tr> <tr> <td><code class="highlighter-rouge">--health-interval</code></td> <td></td> <td>Time between running the check (ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code class="highlighter-rouge">--health-retries</code></td> <td></td> <td>Consecutive failures needed to report unhealthy</td> </tr> <tr> <td><code class="highlighter-rouge">--health-start-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank" class="_"><span>API 1.29+</span></a><br>Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code class="highlighter-rouge">--health-timeout</code></td> <td></td> <td>Maximum time to allow one check to run (ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code class="highlighter-rouge">--help</code></td> <td></td> <td>Print usage</td> </tr> <tr> <td><code class="highlighter-rouge">--hostname , -h</code></td> <td></td> <td>Container host name</td> </tr> <tr> <td><code class="highlighter-rouge">--init</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Run an init inside the container that forwards signals and reaps processes</td> </tr> <tr> <td><code class="highlighter-rouge">--interactive , -i</code></td> <td></td> <td>Keep STDIN open even if not attached</td> </tr> <tr> <td><code class="highlighter-rouge">--io-maxbandwidth</code></td> <td></td> <td>Maximum IO bandwidth limit for the system drive (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--io-maxiops</code></td> <td></td> <td>Maximum IOps limit for the system drive (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--ip</code></td> <td></td> <td>IPv4 address (e.g., 172.30.100.104)</td> </tr> <tr> <td><code class="highlighter-rouge">--ip6</code></td> <td></td> <td>IPv6 address (e.g., 2001:db8::33)</td> </tr> <tr> <td><code class="highlighter-rouge">--ipc</code></td> <td></td> <td>IPC mode to use</td> </tr> <tr> <td><code class="highlighter-rouge">--isolation</code></td> <td></td> <td>Container isolation technology</td> </tr> <tr> <td><code class="highlighter-rouge">--kernel-memory</code></td> <td></td> <td>Kernel memory limit</td> </tr> <tr> <td><code class="highlighter-rouge">--label , -l</code></td> <td></td> <td>Set meta data on a container</td> </tr> <tr> <td><code class="highlighter-rouge">--label-file</code></td> <td></td> <td>Read in a line delimited file of labels</td> </tr> <tr> <td><code class="highlighter-rouge">--link</code></td> <td></td> <td>Add link to another container</td> </tr> <tr> <td><code class="highlighter-rouge">--link-local-ip</code></td> <td></td> <td>Container IPv4/IPv6 link-local addresses</td> </tr> <tr> <td><code class="highlighter-rouge">--log-driver</code></td> <td></td> <td>Logging driver for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--log-opt</code></td> <td></td> <td>Log driver options</td> </tr> <tr> <td><code class="highlighter-rouge">--mac-address</code></td> <td></td> <td>Container MAC address (e.g., 92:d0:c6:0a:29:33)</td> </tr> <tr> <td><code class="highlighter-rouge">--memory , -m</code></td> <td></td> <td>Memory limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-reservation</code></td> <td></td> <td>Memory soft limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-swap</code></td> <td></td> <td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-swappiness</code></td> <td><code class="highlighter-rouge">-1</code></td> <td>Tune container memory swappiness (0 to 100)</td> </tr> <tr> <td><code class="highlighter-rouge">--mount</code></td> <td></td> <td>Attach a filesystem mount to the container</td> </tr> <tr> <td><code class="highlighter-rouge">--name</code></td> <td></td> <td>Assign a name to the container</td> </tr> <tr> <td><code class="highlighter-rouge">--net</code></td> <td></td> <td>Connect a container to a network</td> </tr> <tr> <td><code class="highlighter-rouge">--net-alias</code></td> <td></td> <td>Add network-scoped alias for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--network</code></td> <td></td> <td>Connect a container to a network</td> </tr> <tr> <td><code class="highlighter-rouge">--network-alias</code></td> <td></td> <td>Add network-scoped alias for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--no-healthcheck</code></td> <td></td> <td>Disable any container-specified HEALTHCHECK</td> </tr> <tr> <td><code class="highlighter-rouge">--oom-kill-disable</code></td> <td></td> <td>Disable OOM Killer</td> </tr> <tr> <td><code class="highlighter-rouge">--oom-score-adj</code></td> <td></td> <td>Tune host’s OOM preferences (-1000 to 1000)</td> </tr> <tr> <td><code class="highlighter-rouge">--pid</code></td> <td></td> <td>PID namespace to use</td> </tr> <tr> <td><code class="highlighter-rouge">--pids-limit</code></td> <td></td> <td>Tune container pids limit (set -1 for unlimited)</td> </tr> <tr> <td><code class="highlighter-rouge">--platform</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank" class="_">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank" class="_"><span>API 1.32+</span></a><br>Set platform if server is multi-platform capable</td> </tr> <tr> <td><code class="highlighter-rouge">--privileged</code></td> <td></td> <td>Give extended privileges to this container</td> </tr> <tr> <td><code class="highlighter-rouge">--publish , -p</code></td> <td></td> <td>Publish a container’s port(s) to the host</td> </tr> <tr> <td><code class="highlighter-rouge">--publish-all , -P</code></td> <td></td> <td>Publish all exposed ports to random ports</td> </tr> <tr> <td><code class="highlighter-rouge">--read-only</code></td> <td></td> <td>Mount the container’s root filesystem as read only</td> </tr> <tr> <td><code class="highlighter-rouge">--restart</code></td> <td><code class="highlighter-rouge">no</code></td> <td>Restart policy to apply when a container exits</td> </tr> <tr> <td><code class="highlighter-rouge">--rm</code></td> <td></td> <td>Automatically remove the container when it exits</td> </tr> <tr> <td><code class="highlighter-rouge">--runtime</code></td> <td></td> <td>Runtime to use for this container</td> </tr> <tr> <td><code class="highlighter-rouge">--security-opt</code></td> <td></td> <td>Security Options</td> </tr> <tr> <td><code class="highlighter-rouge">--shm-size</code></td> <td></td> <td>Size of /dev/shm</td> </tr> <tr> <td><code class="highlighter-rouge">--stop-signal</code></td> <td><code class="highlighter-rouge">SIGTERM</code></td> <td>Signal to stop a container</td> </tr> <tr> <td><code class="highlighter-rouge">--stop-timeout</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Timeout (in seconds) to stop a container</td> </tr> <tr> <td><code class="highlighter-rouge">--storage-opt</code></td> <td></td> <td>Storage driver options for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--sysctl</code></td> <td></td> <td>Sysctl options</td> </tr> <tr> <td><code class="highlighter-rouge">--tmpfs</code></td> <td></td> <td>Mount a tmpfs directory</td> </tr> <tr> <td><code class="highlighter-rouge">--tty , -t</code></td> <td></td> <td>Allocate a pseudo-TTY</td> </tr> <tr> <td><code class="highlighter-rouge">--ulimit</code></td> <td></td> <td>Ulimit options</td> </tr> <tr> <td><code class="highlighter-rouge">--user , -u</code></td> <td></td> <td>Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</td> </tr> <tr> <td><code class="highlighter-rouge">--userns</code></td> <td></td> <td>User namespace to use</td> </tr> <tr> <td><code class="highlighter-rouge">--uts</code></td> <td></td> <td>UTS namespace to use</td> </tr> <tr> <td><code class="highlighter-rouge">--volume , -v</code></td> <td></td> <td>Bind mount a volume</td> </tr> <tr> <td><code class="highlighter-rouge">--volume-driver</code></td> <td></td> <td>Optional volume driver for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--volumes-from</code></td> <td></td> <td>Mount volumes from the specified container(s)</td> </tr> <tr> <td><code class="highlighter-rouge">--workdir , -w</code></td> <td></td> <td>Working directory inside the container</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-diff',
            label: 'Inspect changes to files or directories on a container’s filesystem',
            usage: 'docker container diff CONTAINER',
            nb: ''
        },
        {
            value: 'docker-container-exec',
            label: 'Run a command in a running container',
            usage: 'docker container exec [OPTIONS] CONTAINER COMMAND [ARG...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--detach , -d</code></td> <td></td> <td>Detached mode: run command in the background</td> </tr> <tr> <td><code class="highlighter-rouge">--detach-keys</code></td> <td></td> <td>Override the key sequence for detaching a container</td> </tr> <tr> <td><code class="highlighter-rouge">--env , -e</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Set environment variables</td> </tr> <tr> <td><code class="highlighter-rouge">--interactive , -i</code></td> <td></td> <td>Keep STDIN open even if not attached</td> </tr> <tr> <td><code class="highlighter-rouge">--privileged</code></td> <td></td> <td>Give extended privileges to the command</td> </tr> <tr> <td><code class="highlighter-rouge">--tty , -t</code></td> <td></td> <td>Allocate a pseudo-TTY</td> </tr> <tr> <td><code class="highlighter-rouge">--user , -u</code></td> <td></td> <td>Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</td> </tr> <tr> <td><code class="highlighter-rouge">--workdir , -w</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.35/" target="_blank" class="_"><span>API 1.35+</span></a><br>Working directory inside the container</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-export',
            label: 'Export a container’s filesystem as a tar archive',
            usage: 'docker container export [OPTIONS] CONTAINER',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--output , -o</code></td> <td></td> <td>Write to a file, instead of STDOUT</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-inspect',
            label: 'Display detailed information on one or more containers',
            usage: 'docker container inspect [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--format , -f</code></td> <td></td> <td>Format the output using the given Go template</td> </tr> <tr> <td><code class="highlighter-rouge">--size , -s</code></td> <td></td> <td>Display total file sizes</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-kill',
            label: 'Kill one or more running containers',
            usage: 'docker container kill [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead><tr><td>Name, shorthand</td><td>Default</td><td>Description</td></tr></thead><tbody><tr><td><code class="highlighter-rouge">--signal , -s</code></td><td><code class="highlighter-rouge">KILL</code></td><td>Signal to send to the container</td></tr></tbody></table>'
        },
        {
            value: 'docker-container-logs',
            label: 'Fetch the logs of a container',
            usage: 'docker container logs [OPTIONS] CONTAINER',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--details</code></td> <td></td> <td>Show extra details provided to logs</td> </tr> <tr> <td><code class="highlighter-rouge">--follow , -f</code></td> <td></td> <td>Follow log output</td> </tr> <tr> <td><code class="highlighter-rouge">--since</code></td> <td></td> <td>Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)</td> </tr> <tr> <td><code class="highlighter-rouge">--tail</code></td> <td><code class="highlighter-rouge">all</code></td> <td>Number of lines to show from the end of the logs</td> </tr> <tr> <td><code class="highlighter-rouge">--timestamps , -t</code></td> <td></td> <td>Show timestamps</td> </tr> <tr> <td><code class="highlighter-rouge">--until</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.35/" target="_blank" class="_"><span>API 1.35+</span></a><br>Show logs before a timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-ls',
            label: 'List containers',
            usage: 'docker container ls [OPTIONS]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--all , -a</code></td> <td></td> <td>Show all containers (default shows just running)</td> </tr> <tr> <td><code class="highlighter-rouge">--filter , -f</code></td> <td></td> <td>Filter output based on conditions provided</td> </tr> <tr> <td><code class="highlighter-rouge">--format</code></td> <td></td> <td>Pretty-print containers using a Go template</td> </tr> <tr> <td><code class="highlighter-rouge">--last , -n</code></td> <td><code class="highlighter-rouge">-1</code></td> <td>Show n last created containers (includes all states)</td> </tr> <tr> <td><code class="highlighter-rouge">--latest , -l</code></td> <td></td> <td>Show the latest created container (includes all states)</td> </tr> <tr> <td><code class="highlighter-rouge">--no-trunc</code></td> <td></td> <td>Don’t truncate output</td> </tr> <tr> <td><code class="highlighter-rouge">--quiet , -q</code></td> <td></td> <td>Only display numeric IDs</td> </tr> <tr> <td><code class="highlighter-rouge">--size , -s</code></td> <td></td> <td>Display total file sizes</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-pause',
            label: 'Pause all processes within one or more containers',
            usage: 'docker container pause CONTAINER [CONTAINER...]',
            nb: ''
        },
        {
            value: 'docker-container-port',
            label: 'List port mappings or a specific mapping for the container',
            usage: 'docker container port CONTAINER [PRIVATE_PORT[/PROTO]]',
            nb: ''
        },
        {
            value: 'docker-container-prune',
            label: 'Remove all stopped containers',
            usage: 'docker container prune [OPTIONS]',
            nb: 'API 1.25+ The client and daemon API must both be at least 1.25 to use this command. Use the docker version command on the client to check your client and daemon API versions. <br><br> <span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--filter</code></td> <td></td> <td>Provide filter values (e.g. "until=<timestamp>")</timestamp></td> </tr> <tr> <td><code class="highlighter-rouge">--force , -f</code></td> <td></td> <td>Do not prompt for confirmation</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-rename',
            label: 'Rename a container',
            usage: 'docker container rename CONTAINER NEW_NAME',
            nb: ''
        },
        {
            value: 'docker-container-restart',
            label: 'Restart one or more containers',
            usage: 'docker container restart [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--time , -t</code></td> <td><code class="highlighter-rouge">10</code></td> <td>Seconds to wait for stop before killing the container</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-rm',
            label: 'Remove one or more containers',
            usage: 'docker container rm [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--force , -f</code></td> <td></td> <td>Force the removal of a running container (uses SIGKILL)</td> </tr> <tr> <td><code class="highlighter-rouge">--link , -l</code></td> <td></td> <td>Remove the specified link</td> </tr> <tr> <td><code class="highlighter-rouge">--volumes , -v</code></td> <td></td> <td>Remove anonymous volumes associated with the container</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-run',
            label: 'Run a command in a new container',
            usage: 'docker container run [OPTIONS] IMAGE [COMMAND] [ARG...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--add-host</code></td> <td></td> <td>Add a custom host-to-IP mapping (host:ip)</td> </tr> <tr> <td><code class="highlighter-rouge">--attach , -a</code></td> <td></td> <td>Attach to STDIN, STDOUT or STDERR</td> </tr> <tr> <td><code class="highlighter-rouge">--blkio-weight</code></td> <td></td> <td>Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)</td> </tr> <tr> <td><code class="highlighter-rouge">--blkio-weight-device</code></td> <td></td> <td>Block IO weight (relative device weight)</td> </tr> <tr> <td><code class="highlighter-rouge">--cap-add</code></td> <td></td> <td>Add Linux capabilities</td> </tr> <tr> <td><code class="highlighter-rouge">--cap-drop</code></td> <td></td> <td>Drop Linux capabilities</td> </tr> <tr> <td><code class="highlighter-rouge">--cgroup-parent</code></td> <td></td> <td>Optional parent cgroup for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--cidfile</code></td> <td></td> <td>Write the container ID to the file</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-count</code></td> <td></td> <td>CPU count (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-percent</code></td> <td></td> <td>CPU percent (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-period</code></td> <td></td> <td>Limit CPU CFS (Completely Fair Scheduler) period</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-quota</code></td> <td></td> <td>Limit CPU CFS (Completely Fair Scheduler) quota</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-rt-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Limit CPU real-time period in microseconds</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-rt-runtime</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Limit CPU real-time runtime in microseconds</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-shares , -c</code></td> <td></td> <td>CPU shares (relative weight)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpus</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Number of CPUs</td> </tr> <tr> <td><code class="highlighter-rouge">--cpuset-cpus</code></td> <td></td> <td>CPUs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpuset-mems</code></td> <td></td> <td>MEMs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code class="highlighter-rouge">--detach , -d</code></td> <td></td> <td>Run container in background and print container ID</td> </tr> <tr> <td><code class="highlighter-rouge">--detach-keys</code></td> <td></td> <td>Override the key sequence for detaching a container</td> </tr> <tr> <td><code class="highlighter-rouge">--device</code></td> <td></td> <td>Add a host device to the container</td> </tr> <tr> <td><code class="highlighter-rouge">--device-cgroup-rule</code></td> <td></td> <td>Add a rule to the cgroup allowed devices list</td> </tr> <tr> <td><code class="highlighter-rouge">--device-read-bps</code></td> <td></td> <td>Limit read rate (bytes per second) from a device</td> </tr> <tr> <td><code class="highlighter-rouge">--device-read-iops</code></td> <td></td> <td>Limit read rate (IO per second) from a device</td> </tr> <tr> <td><code class="highlighter-rouge">--device-write-bps</code></td> <td></td> <td>Limit write rate (bytes per second) to a device</td> </tr> <tr> <td><code class="highlighter-rouge">--device-write-iops</code></td> <td></td> <td>Limit write rate (IO per second) to a device</td> </tr> <tr> <td><code class="highlighter-rouge">--disable-content-trust</code></td> <td><code class="highlighter-rouge">true</code></td> <td>Skip image verification</td> </tr> <tr> <td><code class="highlighter-rouge">--dns</code></td> <td></td> <td>Set custom DNS servers</td> </tr> <tr> <td><code class="highlighter-rouge">--dns-opt</code></td> <td></td> <td>Set DNS options</td> </tr> <tr> <td><code class="highlighter-rouge">--dns-option</code></td> <td></td> <td>Set DNS options</td> </tr> <tr> <td><code class="highlighter-rouge">--dns-search</code></td> <td></td> <td>Set custom DNS search domains</td> </tr> <tr> <td><code class="highlighter-rouge">--domainname</code></td> <td></td> <td>Container NIS domain name</td> </tr> <tr> <td><code class="highlighter-rouge">--entrypoint</code></td> <td></td> <td>Overwrite the default ENTRYPOINT of the image</td> </tr> <tr> <td><code class="highlighter-rouge">--env , -e</code></td> <td></td> <td>Set environment variables</td> </tr> <tr> <td><code class="highlighter-rouge">--env-file</code></td> <td></td> <td>Read in a file of environment variables</td> </tr> <tr> <td><code class="highlighter-rouge">--expose</code></td> <td></td> <td>Expose a port or a range of ports</td> </tr> <tr> <td><code class="highlighter-rouge">--gpus</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank" class="_"><span>API 1.40+</span></a><br>GPU devices to add to the container (‘all’ to pass all GPUs)</td> </tr> <tr> <td><code class="highlighter-rouge">--group-add</code></td> <td></td> <td>Add additional groups to join</td> </tr> <tr> <td><code class="highlighter-rouge">--health-cmd</code></td> <td></td> <td>Command to run to check health</td> </tr> <tr> <td><code class="highlighter-rouge">--health-interval</code></td> <td></td> <td>Time between running the check (ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code class="highlighter-rouge">--health-retries</code></td> <td></td> <td>Consecutive failures needed to report unhealthy</td> </tr> <tr> <td><code class="highlighter-rouge">--health-start-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank" class="_"><span>API 1.29+</span></a><br>Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code class="highlighter-rouge">--health-timeout</code></td> <td></td> <td>Maximum time to allow one check to run (ms|s|m|h) (default 0s)</td> </tr> <tr> <td><code class="highlighter-rouge">--help</code></td> <td></td> <td>Print usage</td> </tr> <tr> <td><code class="highlighter-rouge">--hostname , -h</code></td> <td></td> <td>Container host name</td> </tr> <tr> <td><code class="highlighter-rouge">--init</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Run an init inside the container that forwards signals and reaps processes</td> </tr> <tr> <td><code class="highlighter-rouge">--interactive , -i</code></td> <td></td> <td>Keep STDIN open even if not attached</td> </tr> <tr> <td><code class="highlighter-rouge">--io-maxbandwidth</code></td> <td></td> <td>Maximum IO bandwidth limit for the system drive (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--io-maxiops</code></td> <td></td> <td>Maximum IOps limit for the system drive (Windows only)</td> </tr> <tr> <td><code class="highlighter-rouge">--ip</code></td> <td></td> <td>IPv4 address (e.g., 172.30.100.104)</td> </tr> <tr> <td><code class="highlighter-rouge">--ip6</code></td> <td></td> <td>IPv6 address (e.g., 2001:db8::33)</td> </tr> <tr> <td><code class="highlighter-rouge">--ipc</code></td> <td></td> <td>IPC mode to use</td> </tr> <tr> <td><code class="highlighter-rouge">--isolation</code></td> <td></td> <td>Container isolation technology</td> </tr> <tr> <td><code class="highlighter-rouge">--kernel-memory</code></td> <td></td> <td>Kernel memory limit</td> </tr> <tr> <td><code class="highlighter-rouge">--label , -l</code></td> <td></td> <td>Set meta data on a container</td> </tr> <tr> <td><code class="highlighter-rouge">--label-file</code></td> <td></td> <td>Read in a line delimited file of labels</td> </tr> <tr> <td><code class="highlighter-rouge">--link</code></td> <td></td> <td>Add link to another container</td> </tr> <tr> <td><code class="highlighter-rouge">--link-local-ip</code></td> <td></td> <td>Container IPv4/IPv6 link-local addresses</td> </tr> <tr> <td><code class="highlighter-rouge">--log-driver</code></td> <td></td> <td>Logging driver for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--log-opt</code></td> <td></td> <td>Log driver options</td> </tr> <tr> <td><code class="highlighter-rouge">--mac-address</code></td> <td></td> <td>Container MAC address (e.g., 92:d0:c6:0a:29:33)</td> </tr> <tr> <td><code class="highlighter-rouge">--memory , -m</code></td> <td></td> <td>Memory limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-reservation</code></td> <td></td> <td>Memory soft limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-swap</code></td> <td></td> <td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-swappiness</code></td> <td><code class="highlighter-rouge">-1</code></td> <td>Tune container memory swappiness (0 to 100)</td> </tr> <tr> <td><code class="highlighter-rouge">--mount</code></td> <td></td> <td>Attach a filesystem mount to the container</td> </tr> <tr> <td><code class="highlighter-rouge">--name</code></td> <td></td> <td>Assign a name to the container</td> </tr> <tr> <td><code class="highlighter-rouge">--net</code></td> <td></td> <td>Connect a container to a network</td> </tr> <tr> <td><code class="highlighter-rouge">--net-alias</code></td> <td></td> <td>Add network-scoped alias for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--network</code></td> <td></td> <td>Connect a container to a network</td> </tr> <tr> <td><code class="highlighter-rouge">--network-alias</code></td> <td></td> <td>Add network-scoped alias for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--no-healthcheck</code></td> <td></td> <td>Disable any container-specified HEALTHCHECK</td> </tr> <tr> <td><code class="highlighter-rouge">--oom-kill-disable</code></td> <td></td> <td>Disable OOM Killer</td> </tr> <tr> <td><code class="highlighter-rouge">--oom-score-adj</code></td> <td></td> <td>Tune host’s OOM preferences (-1000 to 1000)</td> </tr> <tr> <td><code class="highlighter-rouge">--pid</code></td> <td></td> <td>PID namespace to use</td> </tr> <tr> <td><code class="highlighter-rouge">--pids-limit</code></td> <td></td> <td>Tune container pids limit (set -1 for unlimited)</td> </tr> <tr> <td><code class="highlighter-rouge">--platform</code></td> <td></td> <td><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file" target="_blank" class="_">experimental (daemon)</a><a href="https://docs.docker.com/engine/api/v1.32/" target="_blank" class="_"><span>API 1.32+</span></a><br>Set platform if server is multi-platform capable</td> </tr> <tr> <td><code class="highlighter-rouge">--privileged</code></td> <td></td> <td>Give extended privileges to this container</td> </tr> <tr> <td><code class="highlighter-rouge">--publish , -p</code></td> <td></td> <td>Publish a container’s port(s) to the host</td> </tr> <tr> <td><code class="highlighter-rouge">--publish-all , -P</code></td> <td></td> <td>Publish all exposed ports to random ports</td> </tr> <tr> <td><code class="highlighter-rouge">--read-only</code></td> <td></td> <td>Mount the container’s root filesystem as read only</td> </tr> <tr> <td><code class="highlighter-rouge">--restart</code></td> <td><code class="highlighter-rouge">no</code></td> <td>Restart policy to apply when a container exits</td> </tr> <tr> <td><code class="highlighter-rouge">--rm</code></td> <td></td> <td>Automatically remove the container when it exits</td> </tr> <tr> <td><code class="highlighter-rouge">--runtime</code></td> <td></td> <td>Runtime to use for this container</td> </tr> <tr> <td><code class="highlighter-rouge">--security-opt</code></td> <td></td> <td>Security Options</td> </tr> <tr> <td><code class="highlighter-rouge">--shm-size</code></td> <td></td> <td>Size of /dev/shm</td> </tr> <tr> <td><code class="highlighter-rouge">--sig-proxy</code></td> <td><code class="highlighter-rouge">true</code></td> <td>Proxy received signals to the process</td> </tr> <tr> <td><code class="highlighter-rouge">--stop-signal</code></td> <td><code class="highlighter-rouge">SIGTERM</code></td> <td>Signal to stop a container</td> </tr> <tr> <td><code class="highlighter-rouge">--stop-timeout</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Timeout (in seconds) to stop a container</td> </tr> <tr> <td><code class="highlighter-rouge">--storage-opt</code></td> <td></td> <td>Storage driver options for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--sysctl</code></td> <td></td> <td>Sysctl options</td> </tr> <tr> <td><code class="highlighter-rouge">--tmpfs</code></td> <td></td> <td>Mount a tmpfs directory</td> </tr> <tr> <td><code class="highlighter-rouge">--tty , -t</code></td> <td></td> <td>Allocate a pseudo-TTY</td> </tr> <tr> <td><code class="highlighter-rouge">--ulimit</code></td> <td></td> <td>Ulimit options</td> </tr> <tr> <td><code class="highlighter-rouge">--user , -u</code></td> <td></td> <td>Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</td> </tr> <tr> <td><code class="highlighter-rouge">--userns</code></td> <td></td> <td>User namespace to use</td> </tr> <tr> <td><code class="highlighter-rouge">--uts</code></td> <td></td> <td>UTS namespace to use</td> </tr> <tr> <td><code class="highlighter-rouge">--volume , -v</code></td> <td></td> <td>Bind mount a volume</td> </tr> <tr> <td><code class="highlighter-rouge">--volume-driver</code></td> <td></td> <td>Optional volume driver for the container</td> </tr> <tr> <td><code class="highlighter-rouge">--volumes-from</code></td> <td></td> <td>Mount volumes from the specified container(s)</td> </tr> <tr> <td><code class="highlighter-rouge">--workdir , -w</code></td> <td></td> <td>Working directory inside the container</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-start',
            label: 'Start one or more stopped containers',
            usage: 'docker container start [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead><tr><td>Name, shorthand</td><td>Default</td><td>Description</td></tr></thead><tbody><tr><td><code class="highlighter-rouge">--attach , -a</code></td><td></td><td>Attach STDOUT/STDERR and forward signals</td></tr><tr><td><code class="highlighter-rouge">--checkpoint</code></td><td></td><td><span class="badge badge-warning">experimental</span>&nbsp;<br>Restore from this checkpoint</td></tr><tr><td><code class="highlighter-rouge">--checkpoint-dir</code></td><td></td><td><span class="badge badge-warning">experimental</span>&nbsp;<br>Use a custom checkpoint storage directory</td></tr><tr><td><code class="highlighter-rouge">--detach-keys</code></td><td></td><td>Override the key sequence for detaching a container</td></tr><tr><td><code class="highlighter-rouge">--interactive , -i</code></td><td></td><td>Attach container’s STDIN</td></tr></tbody></table>'
        },
        {
            value: 'docker-container-stats',
            label: 'Display a live stream of container(s) resource usage statistics',
            usage: 'docker container stats [OPTIONS] [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead><tr><td>Name, shorthand</td><td>Default</td><td>Description</td></tr></thead><tbody><tr><td><code class="highlighter-rouge">--all , -a</code></td><td></td><td>Show all containers (default shows just running)</td></tr><tr><td><code class="highlighter-rouge">--format</code></td><td></td><td>Pretty-print images using a Go template</td></tr><tr><td><code class="highlighter-rouge">--no-stream</code></td><td></td><td>Disable streaming stats and only pull the first result</td></tr><tr><td><code class="highlighter-rouge">--no-trunc</code></td><td></td><td>Do not truncate output</td></tr></tbody></table>'
        },
        {
            value: 'docker-container-stop',
            label: 'Stop one or more running containers',
            usage: 'docker container stop [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead><tr><td>Name, shorthand</td><td>Default</td><td>Description</td></tr></thead><tbody><tr><td><code class="highlighter-rouge">--time , -t</code></td><td><code class="highlighter-rouge">10</code></td><td>Seconds to wait for stop before killing it</td></tr></tbody></table>'
        },
        {
            value: 'docker-container-top',
            label: 'Display the running processes of a container',
            usage: 'docker container top CONTAINER [ps OPTIONS]',
            nb: ''
        },
        {
            value: 'docker-container-unpouse',
            label: 'Unpause all processes within one or more containers',
            usage: 'docker container unpause CONTAINER [CONTAINER...]',
            nb: ''
        },
        {
            value: 'docker-container-update',
            label: 'Update configuration of one or more containers',
            usage: 'docker container update [OPTIONS] CONTAINER [CONTAINER...]',
            nb: '<span class="board__option-title">Options</span> <table><thead> <tr> <td>Name, shorthand</td> <td>Default</td> <td>Description</td> </tr></thead><tbody> <tr> <td><code class="highlighter-rouge">--blkio-weight</code></td> <td></td> <td>Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-period</code></td> <td></td> <td>Limit CPU CFS (Completely Fair Scheduler) period</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-quota</code></td> <td></td> <td>Limit CPU CFS (Completely Fair Scheduler) quota</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-rt-period</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Limit the CPU real-time period in microseconds</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-rt-runtime</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.25/" target="_blank" class="_">API 1.25+</a><br>Limit the CPU real-time runtime in microseconds</td> </tr> <tr> <td><code class="highlighter-rouge">--cpu-shares , -c</code></td> <td></td> <td>CPU shares (relative weight)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpus</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.29/" target="_blank" class="_"><span>API 1.29+</span></a><br>Number of CPUs</td> </tr> <tr> <td><code class="highlighter-rouge">--cpuset-cpus</code></td> <td></td> <td>CPUs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code class="highlighter-rouge">--cpuset-mems</code></td> <td></td> <td>MEMs in which to allow execution (0-3, 0,1)</td> </tr> <tr> <td><code class="highlighter-rouge">--kernel-memory</code></td> <td></td> <td>Kernel memory limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory , -m</code></td> <td></td> <td>Memory limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-reservation</code></td> <td></td> <td>Memory soft limit</td> </tr> <tr> <td><code class="highlighter-rouge">--memory-swap</code></td> <td></td> <td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td> </tr> <tr> <td><code class="highlighter-rouge">--pids-limit</code></td> <td></td> <td><a href="https://docs.docker.com/engine/api/v1.40/" target="_blank" class="_"><span>API 1.40+</span></a><br>Tune container pids limit (set -1 for unlimited)</td> </tr> <tr> <td><code class="highlighter-rouge">--restart</code></td> <td></td> <td>Restart policy to apply when a container exits</td> </tr> <!-- end for option --></tbody></table>'
        },
        {
            value: 'docker-container-wait',
            label: 'Block until one or more containers stop, then print their exit codes',
            usage: 'docker container wait CONTAINER [CONTAINER...]',
            nb: ''
        }
    ]
};
